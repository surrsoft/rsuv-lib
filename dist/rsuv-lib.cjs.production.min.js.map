{"version":3,"file":"rsuv-lib.cjs.production.min.js","sources":["../src/RsuvErr.ts","../src/RsuvPaginationGyth.ts","../src/RsuvResultBoolPknz.ts","../src/RsuvTxString.ts","../src/RsuvTxStringAA.ts","../src/RsuvTuString.ts","../src/RsuvTxStringB.ts","../src/RsuvTxStringC.ts","../src/RsuvTxEmail.ts","../node_modules/regenerator-runtime/runtime.js","../src/RsuvAdapterZrnx.tsx","../src/RsuvTxJsonServer.ts","../src/RsuvTxBoolean.ts","../src/RsuvCheckModels.ts","../src/RsuvBnuwUtils.ts","../src/RsuvConst.ts","../src/RsuvResultTibo.ts","../src/RsuvValueAnd.ts"],"sourcesContent":["/**\n * Представляет какую-либо ошибку\n */\nexport class RsuvErr {\n  constructor(readonly code: string = '', readonly message: string = '') {\n  }\n\n  asString(): string {\n    return `code [${this.code}] message [${this.message}]`\n  }\n\n  static asStringB(oj: RsuvErr): string {\n    return `code [${oj.code}] message [${oj.message}]`\n  }\n}\n","/**\n * [[gyth]]\n * Сущность для пагинации. Передаём в конструктор \"общее кол-во элементов\" и \"кол-во элементов на странице\", и затем\n * по \"номеру страницы\" узнаём начальный и конечный индексы с помощью метода {@link indexesByPageNum}\n */\nexport class RsuvPaginationGyth {\n\n  /**\n   * Количество страниц\n   */\n  public readonly pageCount: number = 1\n\n  /**\n   * При интанцировании вычисляет поле {@link pageCount}\n   *\n   * @param elemsCount (1) -- общее количество элементов\n   * @param elemsPerPageCount (2) -- элементов на одной странице\n   */\n  constructor(readonly elemsCount: number = 20, readonly elemsPerPageCount: number = 10) {\n    // --- вычисление this.pageCount\n    if (elemsCount >= elemsPerPageCount) {\n      const pagesFloat = elemsCount / elemsPerPageCount\n      const pages = Math.trunc(pagesFloat)\n      const dev = pagesFloat - pages;\n      if (dev === 0) {\n        this.pageCount = pages\n      } else if (dev > 0) {\n        this.pageCount = pages + 1\n      }\n    }\n  }\n\n  /**\n   *\n   * @param pageNum (1) -- 1+, если больше реального количества страниц, то возвращаются данные для фактичесчки последней\n   * страницы\n   */\n  indexesByPageNum(pageNum: number): { indexStart: number, indexLast: number } {\n    const pageNum0 = pageNum > this.pageCount ? this.pageCount : pageNum;\n    // ---\n    const indexLast = pageNum0 * this.elemsPerPageCount - 1;\n    const indexStart = indexLast - this.elemsPerPageCount + 1;\n    return {indexStart, indexLast}\n  }\n\n  elemsByPageNum(elems: any[], pageNum: number): any[] {\n    const {indexStart, indexLast} = this.indexesByPageNum(pageNum);\n    return elems.slice(indexStart, indexLast + 1)\n  }\n\n}\n","/**\n * [[pknz]]\n */\nexport class RsuvResultBoolPknz {\n  constructor(readonly success: boolean = true, readonly errCode: string = '', readonly errMessage: string = '') {\n  }\n}\n","/*\n * Представляет строку не нулевой длины\n */\n\nimport { RsuvBnuwNT } from './RsuvBnuwNT';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport _ from 'lodash';\n\nexport class RsuvTxString implements RsuvBnuwNT {\n  constructor(public val: string) {\n\n  }\n\n  bnuwIsValid(): RsuvResultBoolPknz {\n    try {\n      if (!this.val) {\n        return new RsuvResultBoolPknz(false, '[[210705185504]]', 'is falsy')\n      }\n      if (!_.isString(this.val)) {\n        return new RsuvResultBoolPknz(false, '[[210706090804]]', 'is not string')\n      }\n      if (this.val.length < 1) {\n        return new RsuvResultBoolPknz(false, '[[210705185559]]', 'length < 1')\n      }\n    } catch (err) {\n      return new RsuvResultBoolPknz(false, '[[210705185560]]', err.message)\n    }\n    return new RsuvResultBoolPknz(true);\n  }\n}\n","/*\n * Представляет строку которая: (не нулевой длины) И (не содержит пробелов/переносов)\n */\n\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { RsuvTxString } from './RsuvTxString';\n\nexport class RsuvTxStringAA extends RsuvTxString {\n\n  bnuwIsValid(): RsuvResultBoolPknz {\n    try {\n      const res = super.bnuwIsValid()\n      if (!res.success) {\n        return res\n      }\n      // ---\n      if (/\\s/.test(this.val)) {\n        return new RsuvResultBoolPknz(false, '[[210706092510]]', 'includes whitespace(s)');\n      }\n    } catch (err) {\n      return new RsuvResultBoolPknz(false, '[[210706092135]]', err.message)\n    }\n    return new RsuvResultBoolPknz(true);\n  }\n}\n","/*\nутилиты для String\n */\n\n/**\n * Возвращает TRUE если строка str это NULL, строка нулевой длины, или строка из одних пробелов\n *\n * source [210217114100]\n */\nexport function isEmptyOrWhitespaces(str: any): Boolean {\n  return (!str || str.length === 0 || /^\\s*$/.test(str))\n}\n","/*\n * Представляет строку которая: (не нулевой длины) И (не состоит из одних пробелов/переносов)\n */\n\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { RsuvTxString } from './RsuvTxString';\nimport { isEmptyOrWhitespaces } from './RsuvTuString';\n\nexport class RsuvTxStringB extends RsuvTxString {\n\n  bnuwIsValid(): RsuvResultBoolPknz {\n    try {\n      const res = super.bnuwIsValid()\n      if (!res.success) {\n        return res\n      }\n      // ---\n      if (isEmptyOrWhitespaces(this.val)) {\n        return new RsuvResultBoolPknz(false, '[[210705191242]]', 'contains only whitespaces')\n      }\n    } catch (err) {\n      return new RsuvResultBoolPknz(false, '[[210705190613]]', err.message)\n    }\n    return new RsuvResultBoolPknz(true);\n  }\n}\n","/*\n * Представляет строку которая: (не нулевой длины) И (не состоит из одних пробелов/переносов) И (не начинается с пробела/переноса)\n * И (не заканчивается пробелом/переносом)\n */\n\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { RsuvTxStringB } from './RsuvTxStringB';\n\nexport class RsuvTxStringC extends RsuvTxStringB {\n\n  bnuwIsValid(): RsuvResultBoolPknz {\n    try {\n      const res = super.bnuwIsValid();\n      if (!res.success) {\n        return res;\n      }\n      // ---\n      if (/^\\s/.test(this.val)) {\n        return new RsuvResultBoolPknz(false, '[[210705191717]]', 'started with whitespace');\n      }\n      if (/\\s$/.test(this.val)) {\n        return new RsuvResultBoolPknz(false, '[[210705191826]]', 'ended with whitespace');\n      }\n    } catch (err) {\n      return new RsuvResultBoolPknz(false, '[[210705191508]]', err.message);\n    }\n    return new RsuvResultBoolPknz(true);\n  }\n}\n","import { RsuvTxStringAA } from './RsuvTxStringAA';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport EmailValidator from 'email-validator';\n\nexport class RsuvTxEmail extends RsuvTxStringAA {\n  bnuwIsValid(): RsuvResultBoolPknz {\n    const resV = EmailValidator.validate(this.val)\n    if(!resV) {\n      return new RsuvResultBoolPknz(false, '[[210706113857]]', 'EmailValidator')\n    }\n\n    // const resValid = super.bnuwIsValid();\n    // if (!resValid.success) {\n    //   return resValid;\n    // }\n    // // ---\n    // const b1 = new RegExp(\n    //   /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/g,\n    // ).test(this.val)\n    // if (!b1) {\n    //   return new RsuvResultBoolPknz(false, '[[210706105956]]', 'is not email');\n    // }\n    // const splited = this.val.split('@');\n    // if (splited.length > 2) {\n    //   return new RsuvResultBoolPknz(false, '[[210706112944]]', 'only one @ allowed');\n    // }\n    // if(splited[0].length > 64) {\n    //   return new RsuvResultBoolPknz(false, '[[210706113459]]', 'local-part is > 64 length');\n    // }\n    return new RsuvResultBoolPknz(true)\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/*\n[[zrnx]]\n */\n\n/**\n * [[rkyr]]\n */\nimport { RsuvDataSourceAecrNT } from './RsuvDataSourceAecrNT';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { RsuvPaginationGyth } from './RsuvPaginationGyth';\n\nexport class RsuvZrnxSubData<T> {\n  constructor(\n    /**\n     * номер страницы\n     */\n    public page: number = 0,\n    /**\n     * общее количество страниц\n     */\n    public pageCount: number = 1,\n    /**\n     * общее количество элементов\n     */\n    public elemsAllCount: number = 0,\n    /**\n     * коллекция элементов страницы\n     */\n    public elemsOfPage: T[] = []\n  ) {\n  }\n}\n\n/**\n * [[zrnx]]\n *\n * Сущность для использования в качестве посредника между абстрактным источником-данных (интерефейс\n * {@link RsuvDataSourceAecrNT}) и UI-списком-с-пагинацией.\n *\n * При вызове {@link make} делаются обращения к {@link dataSource} и на базе полученных данных вычисляются поля {@link page}\n * {@link elemsAllCount}, {@link elemsOfPage}, {@link pageCount}. Эти поля можно получить с помощью метода {@link dataGet}\n * в виде типа {@link RsuvZrnxSubData} для последующего использования в качестве входных данных для UI-списка-с-пагинацией\n */\nexport class RsuvAdapterZrnx<T> {\n  private page: number = 0\n  private elemsAllCount: number = 0\n  private elemsOfPage: T[] = []\n  private pageCount: number = 0\n\n  /**\n   *\n   * @param perPage (1) -- число-записей-на-странице, 1+\n   * @param dataSource (2) -- источник-данных\n   */\n  constructor(readonly perPage: number, readonly dataSource: RsuvDataSourceAecrNT<T>) {\n  }\n\n  /**\n   * Запрос данных и вычисление полей текущего объекта\n   *\n   * @param pageNum (1) -- номер страницы\n   * @param last (2) -- если TRUE, то (1) игнирируется и вычисление выполняется для последней страницы\n   */\n  async make(pageNum: number, last: boolean = false): Promise<RsuvResultBoolPknz> {\n    const elemsCount = await this.dataSource.elemsAllCountGet();\n    // ---\n    const rmPagination = new RsuvPaginationGyth(elemsCount, this.perPage);\n    const pageCount = rmPagination.pageCount\n    if (last) {\n      this.page = pageCount\n    } else {\n      this.page = pageCount < pageNum ? pageCount : pageNum;\n    }\n    this.elemsAllCount = elemsCount\n    this.pageCount = pageCount\n    // ---\n    const {indexStart, indexLast} = rmPagination.indexesByPageNum(this.page)\n    this.elemsOfPage = await this.dataSource.elemsGet(indexStart, indexLast - indexStart + 1)\n    // ---\n    return new RsuvResultBoolPknz() // TODO нужно продумать по части ошибок\n  }\n\n  /**\n   * Получение результатов вычислений\n   */\n  dataGet(): RsuvZrnxSubData<T> {\n    return new RsuvZrnxSubData<T>(this.page, this.pageCount, this.elemsAllCount, this.elemsOfPage)\n  }\n\n}\n\n\n","import toInteger from 'lodash/toInteger';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\n\n/*\n-- [[ntxe]] - фильтр, например 'id=1&id=2' или 'json-server&author=typicode'.\n          Тут & работает как ИЛИ, т.е. для 'id=1&id=2' вернутся две записи (если они существуют с такими id)\n\n */\n\n/**\n * [[ktvg]]\n *\n * Утилита для запросав к json-server (https://github.com/typicode/json-server)\n */\nexport class RsuvTxJsonServer {\n\n  private readonly path: string;\n\n  /**\n   *\n   * @param basePath (1) -- expample 'http://localhost:21884/'\n   * @param collectionName (2) -- example 'products'\n   */\n  constructor(readonly basePath: string, readonly collectionName: string) {\n    this.path = `${this.basePath}${this.collectionName}`;\n  }\n\n  async elemsCountGetAll(): Promise<number> {\n    const resp = await fetch(`${this.path}?_limit=1`);\n    const countSt = resp.headers.get('x-total-count');\n    return toInteger(countSt);\n  }\n\n  async elemsGetAll() {\n    const resp = await fetch(this.path);\n    return resp.json();\n  }\n\n  async elemsGetPage(pageNum: number, perPage: number) {\n    const resp = await fetch(`${this.path}?_page=${pageNum}&_limit=${perPage}`);\n    return resp.json();\n  }\n\n  async elemsGet(offset: number, limit: number) {\n    const resp = await fetch(`${this.path}?_start=${offset}&_limit=${limit}`);\n    return resp.json();\n  }\n\n  /**\n   *\n   * @param filter (1) -- см. [ntxe]\n   */\n  async elemsGetByFilter(filter: string) {\n    const resp = await fetch(`${this.path}?${filter}`);\n    return resp.json();\n  }\n\n  async elemDelete(id: string | number): Promise<RsuvResultBoolPknz> {\n    const ret = await fetch(`${this.path}/${id}`, {\n      method: 'DELETE'\n    })\n    if (ret.status !== 200) {\n      return new RsuvResultBoolPknz(false, '210315153800', `err*: id not found; id [${id}]; ret.status [${ret.status}]`)\n    }\n    return new RsuvResultBoolPknz();\n  }\n\n  async elemsDelete(ids: string[] | number []): Promise<RsuvResultBoolPknz[]> {\n    const ret = [];\n    for (const id of ids) {\n      const res = await this.elemDelete(id);\n      ret.push(res);\n    }\n    return ret;\n  }\n\n  /**\n   *\n   * @param filter (1) -- см. [ntxe]\n   */\n  async elemsDeleteByFilter(filter: string): Promise<RsuvResultBoolPknz[]> {\n    const elems = await this.elemsGetByFilter(filter)\n    return await this.elemsDelete(elems.map((el: any) => el.id))\n  }\n\n  async elemCreate(data: object): Promise<RsuvResultBoolPknz> {\n    const res = await fetch(`${this.path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n    // ---\n    if (res.status === 201) {\n      return new RsuvResultBoolPknz()\n    }\n    return new RsuvResultBoolPknz(false, '210316120200', `err*: not created; status [${res.status}] url [${res.url}]`)\n  }\n\n  async elemUpdate(data: any): Promise<RsuvResultBoolPknz> {\n    const res = await fetch(`${this.path}/${data.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n    if (res.status === 200) {\n      return new RsuvResultBoolPknz()\n    }\n    return new RsuvResultBoolPknz(false, '210318111500', `err*: not updated; status [${res.status}] url [${res.url}]`)\n  }\n}\n","/*\n * Представляет строку не нулевой длины\n */\n\nimport { RsuvBnuwNT } from './RsuvBnuwNT';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport _ from 'lodash';\n\nexport class RsuvTxBoolean implements RsuvBnuwNT {\n  constructor(public val: boolean) {\n\n  }\n\n  bnuwIsValid(): RsuvResultBoolPknz {\n    try {\n      if (!_.isBoolean(this.val)) {\n        return new RsuvResultBoolPknz(false, '[[210711220826]]', 'is not boolean')\n      }\n    } catch (err) {\n      return new RsuvResultBoolPknz(false, '[[210705185560]]', err.message)\n    }\n    return new RsuvResultBoolPknz(true);\n  }\n}\n","/*\n[[ecxm]] - массив из [gnpw]-объектов или пустой массив\n[[gnpw]] - объект вида {id: string, checked: boolean}\n */\n\nimport { RsuvBnuwNT } from './RsuvBnuwNT';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { bnuwUtilsVerifyMulti } from './RsuvBnuwUtils';\nimport { RsuvTxBoolean } from './RsuvTxBoolean';\nimport { RsuvTxStringAA } from './RsuvTxStringAA';\n\n/**\n * Вместо этого типа нужно передавать тип UnwrapRef<RsuvCheckModelGnpw[]>, т.е. value из ref сделанного на RsuvCheckModelGnpw[]\n * <code lang=\"js\">\n *   ref([new RsuvCheckModelGnpw('1', false)]).value\n * </code>\n */\nexport type RsuvT1 = any[]\n\nexport class RsuvEcxm {\n  static find(models: RsuvT1, id: string) {\n    return models.find((model: RsuvCheckModelGnpw) => model.id === id);\n  }\n\n  /**\n   * Добавляет новый элемент (2) в конец (1)\n   * @param modelsBack (1) --\n   * @param model\n   */\n  static append(modelsBack: RsuvT1, model: RsuvCheckModelGnpw): RsuvResultBoolPknz {\n    const fModel = RsuvEcxm.find(modelsBack, model.id);\n    if (fModel) {\n      return new RsuvResultBoolPknz(false, '[[210712155908]]', 'already exist');\n    }\n    modelsBack.push(model);\n    return new RsuvResultBoolPknz(true);\n  }\n\n  static appendMulti(modelsBack: RsuvT1, models: RsuvCheckModelGnpw[]): RsuvResultBoolPknz[] {\n    const ret: RsuvResultBoolPknz[] = [];\n    models.forEach(model => {\n      const res = RsuvEcxm.append(modelsBack, model);\n      if (!res.success) {\n        ret.push(res);\n      }\n    });\n    return ret;\n  }\n\n  static update(modelsBack: RsuvT1, model: RsuvCheckModelGnpw): RsuvResultBoolPknz {\n    const elem = RsuvEcxm.find(modelsBack, model.id);\n    if (elem) {\n      elem.checked = model.checked;\n      return new RsuvResultBoolPknz(true);\n    }\n    return new RsuvResultBoolPknz(false, '[[210712160222]]', 'not finded');\n  }\n\n  static updateMulti(modelsBack: RsuvT1, models: RsuvCheckModelGnpw[]): RsuvResultBoolPknz[] {\n    const ret: RsuvResultBoolPknz[] = [];\n    models.forEach(model => {\n      const res = RsuvEcxm.update(modelsBack, model);\n      if (!res.success) {\n        ret.push(res);\n      }\n    });\n    return ret;\n  }\n\n  static delete(modelsBack: RsuvT1, model: RsuvCheckModelGnpw): RsuvResultBoolPknz {\n    const index = modelsBack.findIndex((elModel: RsuvCheckModelGnpw) => elModel.id === model.id);\n    if (index !== -1) {\n      modelsBack.splice(index, 1);\n      return new RsuvResultBoolPknz(true);\n    }\n    return new RsuvResultBoolPknz(false, '[[210712160441]]', 'not finded');\n  }\n\n  static deleteMulti(modelsBack: RsuvT1, models: RsuvCheckModelGnpw[]): RsuvResultBoolPknz[] {\n    const ret: RsuvResultBoolPknz[] = [];\n    models.forEach(model => {\n      const res = RsuvEcxm.delete(modelsBack, model);\n      if (!res.success) {\n        ret.push(res);\n      }\n    });\n    return ret;\n  }\n\n  static filter(models: RsuvT1, checked: boolean) {\n    return models.filter((elModel: RsuvCheckModelGnpw) => elModel.checked === checked);\n  }\n\n  static inverse(modelsBack: RsuvT1) {\n    modelsBack.forEach((elModel: RsuvCheckModelGnpw) => elModel.checked = !elModel.checked);\n  }\n\n}\n\n\n/**\n * Представление [gnpw]\n */\nexport class RsuvCheckModelGnpw implements RsuvBnuwNT {\n\n  constructor(public id: string = '', public checked: boolean = false) {\n  }\n\n  bnuwIsValid(): RsuvResultBoolPknz {\n    const res = bnuwUtilsVerifyMulti([new RsuvTxStringAA(this.id), new RsuvTxBoolean(this.checked)])\n    if (res.length > 0) {\n      return res[0]\n    }\n    return new RsuvResultBoolPknz(true)\n  }\n}\n","import { RsuvBnuwNT } from './RsuvBnuwNT';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\n\nexport const bnuwUtilsVerify = (value: RsuvBnuwNT | any): RsuvResultBoolPknz => {\n  if (!value) {\n    return new RsuvResultBoolPknz(false, '[[210711215605]]', 'value is falsy')\n  }\n  const res = (value as RsuvBnuwNT).bnuwIsValid();\n  if (!res) {\n    return new RsuvResultBoolPknz(false, '[[210711215805]]', 'invalid value')\n  }\n  return res;\n}\n\n/**\n * Если возвращает пустой массив, значит все элементы (1) валидные, иначе в массиве результы неудачных проверок\n * @param values (1) -- элементы для проверки; пустой массив не валиден\n */\nexport const bnuwUtilsVerifyMulti = (values: any[]): RsuvResultBoolPknz[] => {\n  if (Array.isArray(values) && values.length > 0) {\n    const ret: RsuvResultBoolPknz[] = [];\n    values.forEach((el) => {\n      const verif = bnuwUtilsVerify(el)\n      if (!verif.success) {\n        ret.push(verif)\n      }\n    })\n    return ret;\n  }\n  return [new RsuvResultBoolPknz(false, '[[210711221552]]')]\n}\n","/*\nконстанты разные\n */\n\n/**\n * Когда что-то уже существует\n */\nexport const RSUV_AL_ALREADY_EXIST = 'RSUV_AL_ALREADY_EXIST';\n","/*\n[[tibo]]\n */\n\nexport class RsuvResultTibo {\n  success: boolean = true\n  successCode?: string\n  value?: any\n  errCode?: string\n  errMessage?: string\n\n  constructor(tibo?: RsuvResultTibo) {\n    if(tibo) {\n      this.success = tibo.success\n      this.successCode = tibo.successCode\n      this.value = tibo.value\n      this.errCode = tibo.errCode\n      this.errMessage = tibo.errMessage\n    }\n  }\n}\n\n","export class RsuvValueAnd {\n  /**\n   * МОТИВАЦИЯ: допустим мы хотим получить значение ячейки столбца, но такого столбца не существует; в этом случае\n   * возврат просто falsy значения (undefined и т.п.) не позволяет понять, это значение ячейки undefined или же это\n   * означает что ячейки не существует.\n   *\n   * @param value\n   * @param isValueExist (2) -- если здесь FALSE то это означает что значение поля {@link value} не следует брать во\n   * внимание т.к. на самом деле значения получить не удалось (например сущности из которой предполагается взять\n   * значение просто не существует)\n   */\n  constructor(readonly value: string, readonly isValueExist: boolean = true) {\n  }\n}\n"],"names":["RsuvErr","code","message","asString","this","asStringB","oj","RsuvPaginationGyth","elemsCount","elemsPerPageCount","pagesFloat","pages","Math","trunc","dev","pageCount","indexesByPageNum","pageNum","indexLast","indexStart","elemsByPageNum","elems","slice","RsuvResultBoolPknz","success","errCode","errMessage","RsuvTxString","val","bnuwIsValid","_","isString","length","err","RsuvTxStringAA","res","test","isEmptyOrWhitespaces","str","RsuvTxStringB","RsuvTxStringC","RsuvTxEmail","EmailValidator","validate","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","RsuvZrnxSubData","page","elemsAllCount","elemsOfPage","RsuvAdapterZrnx","perPage","dataSource","make","last","elemsAllCountGet","rmPagination","elemsGet","dataGet","RsuvTxJsonServer","basePath","collectionName","path","elemsCountGetAll","fetch","countSt","headers","get","toInteger","elemsGetAll","json","elemsGetPage","offset","limit","elemsGetByFilter","filter","elemDelete","id","ret","status","elemsDelete","ids","elemsDeleteByFilter","map","el","elemCreate","data","body","JSON","stringify","url","elemUpdate","RsuvTxBoolean","isBoolean","RsuvEcxm","find","models","model","append","modelsBack","appendMulti","update","elem","checked","updateMulti","index","findIndex","elModel","splice","deleteMulti","inverse","RsuvCheckModelGnpw","Array","isArray","verif","bnuwUtilsVerifyMulti","tibo","successCode","isValueExist"],"mappings":"sOAGaA,wBACUC,EAA4BC,YAA5BD,IAAAA,EAAe,aAAaC,IAAAA,EAAkB,cAA9CD,eAA4BC,qBAGjDC,SAAA,0BACkBC,KAAKH,mBAAkBG,KAAKF,eAGvCG,UAAP,SAAiBC,kBACCA,EAAGL,mBAAkBK,EAAGJ,kBCP/BK,wBAaUC,EAAkCC,eAAlCD,IAAAA,EAAqB,aAAaC,IAAAA,EAA4B,oBAA9DD,yBAAkCC,iBARnB,EAU9BD,GAAcC,EAAmB,KAC7BC,EAAaF,EAAaC,EAC1BE,EAAQC,KAAKC,MAAMH,GACnBI,EAAMJ,EAAaC,EACb,IAARG,OACGC,UAAYJ,EACRG,EAAM,SACVC,UAAYJ,EAAQ,+BAU/BK,iBAAA,SAAiBC,OAGTC,GAFWD,EAAUb,KAAKW,UAAYX,KAAKW,UAAYE,GAEhCb,KAAKK,kBAAoB,QAE/C,CAACU,WADWD,EAAYd,KAAKK,kBAAoB,EACpCS,UAAAA,MAGtBE,eAAA,SAAeC,EAAcJ,SACKb,KAAKY,iBAAiBC,UAC/CI,EAAMC,QADNH,aAAYD,UACwB,SC5ClCK,EACX,SAAqBC,EAAkCC,EAA+BC,YAAjEF,IAAAA,GAAmB,YAAeC,IAAAA,EAAkB,aAAaC,IAAAA,EAAqB,iBAAtFF,eAAkCC,kBAA+BC,GCI3EC,wBACQC,YAAAA,qBAInBC,YAAA,mBAESzB,KAAKwB,WACD,IAAIL,GAAmB,EAAO,mBAAoB,gBAEtDO,EAAEC,SAAS3B,KAAKwB,YACZ,IAAIL,GAAmB,EAAO,mBAAoB,oBAEvDnB,KAAKwB,IAAII,OAAS,SACb,IAAIT,GAAmB,EAAO,mBAAoB,cAE3D,MAAOU,UACA,IAAIV,GAAmB,EAAO,mBAAoBU,EAAI/B,gBAExD,IAAIqB,GAAmB,6xCCpBrBW,0FAEXL,YAAA,mBAEUM,cAAYN,2BACbM,EAAIX,eACAW,KAGL,KAAKC,KAAKhC,KAAKwB,YACV,IAAIL,GAAmB,EAAO,mBAAoB,0BAE3D,MAAOU,UACA,IAAIV,GAAmB,EAAO,mBAAoBU,EAAI/B,gBAExD,IAAIqB,GAAmB,OAfEI,YCEpBU,EAAqBC,UAC1BA,GAAsB,IAAfA,EAAIN,QAAgB,QAAQI,KAAKE,mDCFtCC,0FAEXV,YAAA,mBAEUM,cAAYN,2BACbM,EAAIX,eACAW,KAGLE,EAAqBjC,KAAKwB,YACrB,IAAIL,GAAmB,EAAO,mBAAoB,6BAE3D,MAAOU,UACA,IAAIV,GAAmB,EAAO,mBAAoBU,EAAI/B,gBAExD,IAAIqB,GAAmB,OAfCI,GCAtBa,0FAEXX,YAAA,mBAEUM,cAAYN,2BACbM,EAAIX,eACAW,KAGL,MAAMC,KAAKhC,KAAKwB,YACX,IAAIL,GAAmB,EAAO,mBAAoB,8BAEvD,MAAMa,KAAKhC,KAAKwB,YACX,IAAIL,GAAmB,EAAO,mBAAoB,yBAE3D,MAAOU,UACA,IAAIV,GAAmB,EAAO,mBAAoBU,EAAI/B,gBAExD,IAAIqB,GAAmB,OAlBCgB,GCJtBE,0FACXZ,YAAA,kBACea,EAAeC,SAASvC,KAAKwB,KAuBnC,IAAIL,GAAmB,GArBrB,IAAIA,GAAmB,EAAO,mBAAoB,sBAJ9BW,kBCGjC,IAAIU,EAAW,SAAUC,GAGvB,IAAIC,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOC,EAAKC,EAAKC,GAOxB,OANAf,OAAOgB,eAAeH,EAAKC,EAAK,CAC9BC,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAELN,EAAIC,GAEb,IAEEF,EAAO,GAAI,IACX,MAAO1B,GACP0B,EAAS,SAASC,EAAKC,EAAKC,GAC1B,OAAOF,EAAIC,GAAOC,GAItB,SAASK,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IACIC,EAAYzB,OAAO0B,QADFJ,GAAWA,EAAQrB,qBAAqB0B,EAAYL,EAAUK,GACtC1B,WACzC2B,EAAU,IAAIC,EAAQL,GAAe,IAMzC,OAFAC,EAAUK,QAsMZ,SAA0BT,EAASE,EAAMK,GACvC,IAAIG,EA/KuB,iBAiL3B,OAAO,SAAgBC,EAAQC,GAC7B,GAhLoB,cAgLhBF,EACF,MAAM,IAAIG,MAAM,gCAGlB,GAnLoB,cAmLhBH,EAA6B,CAC/B,GAAe,UAAXC,EACF,MAAMC,EAKR,MAoQG,CAAElB,WAzfPoB,EAyfyBC,MAAM,GA9P/B,IAHAR,EAAQI,OAASA,EACjBJ,EAAQK,IAAMA,IAED,CACX,IAAII,EAAWT,EAAQS,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUT,GACnD,GAAIU,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBV,EAAQI,OAGVJ,EAAQa,KAAOb,EAAQc,MAAQd,EAAQK,SAElC,GAAuB,UAAnBL,EAAQI,OAAoB,CACrC,GAnNqB,mBAmNjBD,EAEF,MADAA,EAjNc,YAkNRH,EAAQK,IAGhBL,EAAQe,kBAAkBf,EAAQK,SAEN,WAAnBL,EAAQI,QACjBJ,EAAQgB,OAAO,SAAUhB,EAAQK,KAGnCF,EA5NkB,YA8NlB,IAAIc,EAASC,EAASzB,EAASE,EAAMK,GACrC,GAAoB,WAAhBiB,EAAOE,KAAmB,CAO5B,GAJAhB,EAAQH,EAAQQ,KAjOA,YAFK,iBAuOjBS,EAAOZ,MAAQO,EACjB,SAGF,MAAO,CACLzB,MAAO8B,EAAOZ,IACdG,KAAMR,EAAQQ,MAGS,UAAhBS,EAAOE,OAChBhB,EA/OgB,YAkPhBH,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,OA9QPe,CAAiB3B,EAASE,EAAMK,GAE7CH,EAcT,SAASqB,EAASG,EAAIpC,EAAKoB,GACzB,IACE,MAAO,CAAEc,KAAM,SAAUd,IAAKgB,EAAGC,KAAKrC,EAAKoB,IAC3C,MAAO/C,GACP,MAAO,CAAE6D,KAAM,QAASd,IAAK/C,IAhBjCY,EAAQsB,KAAOA,EAoBf,IAOIoB,EAAmB,GAMvB,SAASb,KACT,SAASwB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkB/C,GAAkB,WAClC,OAAOjD,MAGT,IAAIiG,EAAWtD,OAAOuD,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BzD,GAC5BG,EAAOgD,KAAKM,EAAyBlD,KAGvC+C,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2BnD,UAClC0B,EAAU1B,UAAYD,OAAO0B,OAAO2B,GAWtC,SAASM,EAAsB1D,GAC7B,CAAC,OAAQ,QAAS,UAAU2D,SAAQ,SAAS5B,GAC3CpB,EAAOX,EAAW+B,GAAQ,SAASC,GACjC,OAAO5E,KAAKyE,QAAQE,EAAQC,SAkClC,SAAS4B,EAAcpC,EAAWqC,GAgChC,IAAIC,EAgCJ1G,KAAKyE,QA9BL,SAAiBE,EAAQC,GACvB,SAAS+B,IACP,OAAO,IAAIF,GAAY,SAASG,EAASC,IAnC7C,SAASC,EAAOnC,EAAQC,EAAKgC,EAASC,GACpC,IAAIrB,EAASC,EAASrB,EAAUO,GAASP,EAAWQ,GACpD,GAAoB,UAAhBY,EAAOE,KAEJ,CACL,IAAIqB,EAASvB,EAAOZ,IAChBlB,EAAQqD,EAAOrD,MACnB,OAAIA,GACiB,iBAAVA,GACPb,EAAOgD,KAAKnC,EAAO,WACd+C,EAAYG,QAAQlD,EAAMsD,SAASC,MAAK,SAASvD,GACtDoD,EAAO,OAAQpD,EAAOkD,EAASC,MAC9B,SAAShF,GACViF,EAAO,QAASjF,EAAK+E,EAASC,MAI3BJ,EAAYG,QAAQlD,GAAOuD,MAAK,SAASC,GAI9CH,EAAOrD,MAAQwD,EACfN,EAAQG,MACP,SAASI,GAGV,OAAOL,EAAO,QAASK,EAAOP,EAASC,MAvBzCA,EAAOrB,EAAOZ,KAiCZkC,CAAOnC,EAAQC,EAAKgC,EAASC,MAIjC,OAAOH,EAaLA,EAAkBA,EAAgBO,KAChCN,EAGAA,GACEA,KAkHV,SAASzB,EAAoBF,EAAUT,GACrC,IAAII,EAASK,EAAS9B,SAASqB,EAAQI,QACvC,QA1TEG,IA0TEH,EAAsB,CAKxB,GAFAJ,EAAQS,SAAW,KAEI,UAAnBT,EAAQI,OAAoB,CAE9B,GAAIK,EAAS9B,SAAiB,SAG5BqB,EAAQI,OAAS,SACjBJ,EAAQK,SArUZE,EAsUII,EAAoBF,EAAUT,GAEP,UAAnBA,EAAQI,QAGV,OAAOQ,EAIXZ,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIwC,UAChB,kDAGJ,OAAOjC,EAGT,IAAIK,EAASC,EAASd,EAAQK,EAAS9B,SAAUqB,EAAQK,KAEzD,GAAoB,UAAhBY,EAAOE,KAIT,OAHAnB,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,IACrBL,EAAQS,SAAW,KACZG,EAGT,IAAIkC,EAAO7B,EAAOZ,IAElB,OAAMyC,EAOFA,EAAKtC,MAGPR,EAAQS,EAASsC,YAAcD,EAAK3D,MAGpCa,EAAQgD,KAAOvC,EAASwC,QAQD,WAAnBjD,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQK,SAzXVE,GAmYFP,EAAQS,SAAW,KACZG,GANEkC,GA3BP9C,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIwC,UAAU,oCAC5B7C,EAAQS,SAAW,KACZG,GAoDX,SAASsC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB1H,KAAKgI,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAInC,EAASmC,EAAMQ,YAAc,GACjC3C,EAAOE,KAAO,gBACPF,EAAOZ,IACd+C,EAAMQ,WAAa3C,EAGrB,SAAShB,EAAQL,GAIfnE,KAAKgI,WAAa,CAAC,CAAEJ,OAAQ,SAC7BzD,EAAYoC,QAAQkB,EAAczH,MAClCA,KAAKoI,OAAM,GA8Bb,SAAShC,EAAOiC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAASpF,GAC9B,GAAIqF,EACF,OAAOA,EAAezC,KAAKwC,GAG7B,GAA6B,mBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASzG,QAAS,CAC3B,IAAI4G,GAAK,EAAGjB,EAAO,SAASA,IAC1B,OAASiB,EAAIH,EAASzG,QACpB,GAAIiB,EAAOgD,KAAKwC,EAAUG,GAGxB,OAFAjB,EAAK7D,MAAQ2E,EAASG,GACtBjB,EAAKxC,MAAO,EACLwC,EAOX,OAHAA,EAAK7D,WAzeToB,EA0eIyC,EAAKxC,MAAO,EAELwC,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMkB,GAIjB,SAASA,IACP,MAAO,CAAE/E,WAzfPoB,EAyfyBC,MAAM,GA+MnC,OA5mBAe,EAAkBlD,UAAYyD,EAAGqC,YAAc3C,EAC/CA,EAA2B2C,YAAc5C,EACzCA,EAAkB6C,YAAcpF,EAC9BwC,EACA1C,EACA,qBAaFZ,EAAQmG,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IACHA,IAAShD,GAG2B,uBAAnCgD,EAAKH,aAAeG,EAAKC,QAIhCtG,EAAQuG,KAAO,SAASH,GAQtB,OAPIlG,OAAOsG,eACTtG,OAAOsG,eAAeJ,EAAQ9C,IAE9B8C,EAAOK,UAAYnD,EACnBxC,EAAOsF,EAAQxF,EAAmB,sBAEpCwF,EAAOjG,UAAYD,OAAO0B,OAAOgC,GAC1BwC,GAOTpG,EAAQ0G,MAAQ,SAASvE,GACvB,MAAO,CAAEoC,QAASpC,IAsEpB0B,EAAsBE,EAAc5D,WACpC4D,EAAc5D,UAAUO,GAAuB,WAC7C,OAAOnD,MAETyC,EAAQ+D,cAAgBA,EAKxB/D,EAAQ2G,MAAQ,SAASpF,EAASC,EAASC,EAAMC,EAAasC,QACxC,IAAhBA,IAAwBA,EAAc4C,SAE1C,IAAIC,EAAO,IAAI9C,EACbzC,EAAKC,EAASC,EAASC,EAAMC,GAC7BsC,GAGF,OAAOhE,EAAQmG,oBAAoB3E,GAC/BqF,EACAA,EAAK/B,OAAON,MAAK,SAASF,GACxB,OAAOA,EAAOhC,KAAOgC,EAAOrD,MAAQ4F,EAAK/B,WAuKjDjB,EAAsBD,GAEtB9C,EAAO8C,EAAIhD,EAAmB,aAO9BgD,EAAGpD,GAAkB,WACnB,OAAOjD,MAGTqG,EAAGkD,SAAW,WACZ,MAAO,sBAkCT9G,EAAQ+G,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAI/F,KAAOgG,EACdD,EAAKvB,KAAKxE,GAMZ,OAJA+F,EAAKE,UAIE,SAASnC,IACd,KAAOiC,EAAK5H,QAAQ,CAClB,IAAI6B,EAAM+F,EAAKG,MACf,GAAIlG,KAAOgG,EAGT,OAFAlC,EAAK7D,MAAQD,EACb8D,EAAKxC,MAAO,EACLwC,EAQX,OADAA,EAAKxC,MAAO,EACLwC,IAsCX9E,EAAQ2D,OAASA,EAMjB5B,EAAQ5B,UAAY,CAClB8F,YAAalE,EAEb4D,MAAO,SAASwB,GAcd,GAbA5J,KAAK6J,KAAO,EACZ7J,KAAKuH,KAAO,EAGZvH,KAAKoF,KAAOpF,KAAKqF,WApgBjBP,EAqgBA9E,KAAK+E,MAAO,EACZ/E,KAAKgF,SAAW,KAEhBhF,KAAK2E,OAAS,OACd3E,KAAK4E,SAzgBLE,EA2gBA9E,KAAKgI,WAAWzB,QAAQ2B,IAEnB0B,EACH,IAAK,IAAIb,KAAQ/I,KAEQ,MAAnB+I,EAAKe,OAAO,IACZjH,EAAOgD,KAAK7F,KAAM+I,KACjBR,OAAOQ,EAAK7H,MAAM,MACrBlB,KAAK+I,QAnhBXjE,IAyhBFiF,KAAM,WACJ/J,KAAK+E,MAAO,EAEZ,IACIiF,EADYhK,KAAKgI,WAAW,GACLG,WAC3B,GAAwB,UAApB6B,EAAWtE,KACb,MAAMsE,EAAWpF,IAGnB,OAAO5E,KAAKiK,MAGd3E,kBAAmB,SAAS4E,GAC1B,GAAIlK,KAAK+E,KACP,MAAMmF,EAGR,IAAI3F,EAAUvE,KACd,SAASmK,EAAOC,EAAKC,GAYnB,OAXA7E,EAAOE,KAAO,QACdF,EAAOZ,IAAMsF,EACb3F,EAAQgD,KAAO6C,EAEXC,IAGF9F,EAAQI,OAAS,OACjBJ,EAAQK,SApjBZE,KAujBYuF,EAGZ,IAAK,IAAI7B,EAAIxI,KAAKgI,WAAWpG,OAAS,EAAG4G,GAAK,IAAKA,EAAG,CACpD,IAAIb,EAAQ3H,KAAKgI,WAAWQ,GACxBhD,EAASmC,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOuC,EAAO,OAGhB,GAAIxC,EAAMC,QAAU5H,KAAK6J,KAAM,CAC7B,IAAIS,EAAWzH,EAAOgD,KAAK8B,EAAO,YAC9B4C,EAAa1H,EAAOgD,KAAK8B,EAAO,cAEpC,GAAI2C,GAAYC,EAAY,CAC1B,GAAIvK,KAAK6J,KAAOlC,EAAME,SACpB,OAAOsC,EAAOxC,EAAME,UAAU,GACzB,GAAI7H,KAAK6J,KAAOlC,EAAMG,WAC3B,OAAOqC,EAAOxC,EAAMG,iBAGjB,GAAIwC,GACT,GAAItK,KAAK6J,KAAOlC,EAAME,SACpB,OAAOsC,EAAOxC,EAAME,UAAU,OAG3B,CAAA,IAAI0C,EAMT,MAAM,IAAI1F,MAAM,0CALhB,GAAI7E,KAAK6J,KAAOlC,EAAMG,WACpB,OAAOqC,EAAOxC,EAAMG,gBAU9BvC,OAAQ,SAASG,EAAMd,GACrB,IAAK,IAAI4D,EAAIxI,KAAKgI,WAAWpG,OAAS,EAAG4G,GAAK,IAAKA,EAAG,CACpD,IAAIb,EAAQ3H,KAAKgI,WAAWQ,GAC5B,GAAIb,EAAMC,QAAU5H,KAAK6J,MACrBhH,EAAOgD,KAAK8B,EAAO,eACnB3H,KAAK6J,KAAOlC,EAAMG,WAAY,CAChC,IAAI0C,EAAe7C,EACnB,OAIA6C,IACU,UAAT9E,GACS,aAATA,IACD8E,EAAa5C,QAAUhD,GACvBA,GAAO4F,EAAa1C,aAGtB0C,EAAe,MAGjB,IAAIhF,EAASgF,EAAeA,EAAarC,WAAa,GAItD,OAHA3C,EAAOE,KAAOA,EACdF,EAAOZ,IAAMA,EAET4F,GACFxK,KAAK2E,OAAS,OACd3E,KAAKuH,KAAOiD,EAAa1C,WAClB3C,GAGFnF,KAAKyK,SAASjF,IAGvBiF,SAAU,SAASjF,EAAQuC,GACzB,GAAoB,UAAhBvC,EAAOE,KACT,MAAMF,EAAOZ,IAcf,MAXoB,UAAhBY,EAAOE,MACS,aAAhBF,EAAOE,KACT1F,KAAKuH,KAAO/B,EAAOZ,IACM,WAAhBY,EAAOE,MAChB1F,KAAKiK,KAAOjK,KAAK4E,IAAMY,EAAOZ,IAC9B5E,KAAK2E,OAAS,SACd3E,KAAKuH,KAAO,OACa,WAAhB/B,EAAOE,MAAqBqC,IACrC/H,KAAKuH,KAAOQ,GAGP5C,GAGTuF,OAAQ,SAAS5C,GACf,IAAK,IAAIU,EAAIxI,KAAKgI,WAAWpG,OAAS,EAAG4G,GAAK,IAAKA,EAAG,CACpD,IAAIb,EAAQ3H,KAAKgI,WAAWQ,GAC5B,GAAIb,EAAMG,aAAeA,EAGvB,OAFA9H,KAAKyK,SAAS9C,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACPxC,IAKbwF,MAAS,SAAS/C,GAChB,IAAK,IAAIY,EAAIxI,KAAKgI,WAAWpG,OAAS,EAAG4G,GAAK,IAAKA,EAAG,CACpD,IAAIb,EAAQ3H,KAAKgI,WAAWQ,GAC5B,GAAIb,EAAMC,SAAWA,EAAQ,CAC3B,IAAIpC,EAASmC,EAAMQ,WACnB,GAAoB,UAAhB3C,EAAOE,KAAkB,CAC3B,IAAIkF,EAASpF,EAAOZ,IACpBsD,EAAcP,GAEhB,OAAOiD,GAMX,MAAM,IAAI/F,MAAM,0BAGlBgG,cAAe,SAASxC,EAAUf,EAAYE,GAa5C,OAZAxH,KAAKgF,SAAW,CACd9B,SAAUkD,EAAOiC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBxH,KAAK2E,SAGP3E,KAAK4E,SA7rBPE,GAgsBOK,IAQJ1C,GAOsBqI,EAAOrI,SAGtC,IACEsI,mBAAqBvI,EACrB,MAAOwI,GAUPC,SAAS,IAAK,yBAAdA,CAAwCzI,gCC/tB7B0I,EACX,SAISC,EAIAxK,EAIAyK,EAIAC,YAZAF,IAAAA,EAAe,YAIfxK,IAAAA,EAAoB,YAIpByK,IAAAA,EAAwB,YAIxBC,IAAAA,EAAmB,cAZnBF,iBAIAxK,qBAIAyK,mBAIAC,GAeEC,wBAWUC,EAA0BC,gBAA1BD,kBAA0BC,YAVxB,qBACS,mBACL,kBACC,6BAgBtBC,gCAAN,WAAW5K,EAAiB6K,kGAAAA,IAAAA,GAAgB,YACjB1L,KAAKwL,WAAWG,iCAEnCC,EAAe,IAAIzL,EAFnBC,SAEkDJ,KAAKuL,SACvD5K,EAAYiL,EAAajL,eAExBwK,KADHO,GAGU/K,EAAYE,EAFZF,EAEkCE,OAE3CuK,cAAgBhL,OAChBO,UAAYA,IAEeiL,EAAahL,iBAAiBZ,KAAKmL,MAA5DpK,IAAAA,WAAYD,IAAAA,oBACMd,KAAKwL,WAAWK,SAAS9K,EAAYD,EAAYC,EAAa,uBAAlFsK,qCAEE,IAAIlK,8GAMb2K,QAAA,kBACS,IAAIZ,EAAmBlL,KAAKmL,KAAMnL,KAAKW,UAAWX,KAAKoL,cAAepL,KAAKqL,mBCxEzEU,wBASUC,EAA2BC,iBAA3BD,sBAA2BC,OACzCC,QAAUlM,KAAKgM,SAAWhM,KAAKiM,0CAGhCE,4CAAN,kGACqBC,MAASpM,KAAKkM,gCAC3BG,SAAeC,QAAQC,IAAI,mCAC1BC,EAAUH,2GAGbI,uCAAN,4FACqBL,MAAMpM,KAAKkM,6CAClBQ,+GAGRC,wCAAN,WAAmB9L,EAAiB0K,kFACfa,MAASpM,KAAKkM,eAAcrL,aAAkB0K,0CACrDmB,kHAGRb,oCAAN,WAAee,EAAgBC,kFACVT,MAASpM,KAAKkM,gBAAeU,aAAiBC,0CACrDH,kHAORI,4CAAN,WAAuBC,kFACFX,MAASpM,KAAKkM,SAAQa,0CAC7BL,gHAGRM,sCAAN,WAAiBC,wFACGb,MAASpM,KAAKkM,SAAQe,EAAM,CAC5CtI,OAAQ,qBAES,OAHbuI,UAGEC,gDACC,IAAIhM,GAAmB,EAAO,0CAA2C8L,oBAAoBC,EAAIC,6CAEnG,IAAIhM,2GAGPiM,uCAAN,WAAkBC,8EACVH,EAAM,OACKG,kDAANJ,mBACSjN,KAAKgN,WAAWC,UAClCC,EAAIjF,oEAECiF,4GAOHI,+CAAN,WAA0BP,wFACJ/M,KAAK8M,iBAAiBC,iBAApC9L,kBACOjB,KAAKoN,YAAYnM,EAAMsM,KAAI,SAACC,UAAYA,EAAGP,uJAGpDQ,sCAAN,WAAiBC,wFACGtB,SAASpM,KAAKkM,KAAQ,CACtCvH,OAAQ,OACR2H,QAAS,gBACS,oBAElBqB,KAAMC,KAAKC,UAAUH,eAGJ,OARb3L,UAQEoL,gDACC,IAAIhM,mCAEN,IAAIA,GAAmB,EAAO,6CAA8CY,EAAIoL,iBAAgBpL,EAAI+L,kHAGvGC,sCAAN,WAAiBL,wFACGtB,MAASpM,KAAKkM,SAAQwB,EAAKT,GAAM,CACjDtI,OAAQ,MACR2H,QAAS,gBACS,oBAElBqB,KAAMC,KAAKC,UAAUH,eAEJ,OAPb3L,UAOEoL,gDACC,IAAIhM,mCAEN,IAAIA,GAAmB,EAAO,6CAA8CY,EAAIoL,iBAAgBpL,EAAI+L,qHCvGlGE,wBACQxM,YAAAA,qBAInBC,YAAA,mBAESC,EAAEuM,UAAUjO,KAAKwB,YACb,IAAIL,GAAmB,EAAO,mBAAoB,kBAE3D,MAAOU,UACA,IAAIV,GAAmB,EAAO,mBAAoBU,EAAI/B,gBAExD,IAAIqB,GAAmB,SCFrB+M,oCACJC,KAAP,SAAYC,EAAgBnB,UACnBmB,EAAOD,MAAK,SAACE,UAA8BA,EAAMpB,KAAOA,QAQ1DqB,OAAP,SAAcC,EAAoBF,UACjBH,EAASC,KAAKI,EAAYF,EAAMpB,IAEtC,IAAI9L,GAAmB,EAAO,mBAAoB,kBAE3DoN,EAAWtG,KAAKoG,GACT,IAAIlN,GAAmB,OAGzBqN,YAAP,SAAmBD,EAAoBH,OAC/BlB,EAA4B,UAClCkB,EAAO7H,SAAQ,SAAA8H,OACPtM,EAAMmM,EAASI,OAAOC,EAAYF,GACnCtM,EAAIX,SACP8L,EAAIjF,KAAKlG,MAGNmL,KAGFuB,OAAP,SAAcF,EAAoBF,OAC1BK,EAAOR,EAASC,KAAKI,EAAYF,EAAMpB,WACzCyB,GACFA,EAAKC,QAAUN,EAAMM,QACd,IAAIxN,GAAmB,IAEzB,IAAIA,GAAmB,EAAO,mBAAoB,iBAGpDyN,YAAP,SAAmBL,EAAoBH,OAC/BlB,EAA4B,UAClCkB,EAAO7H,SAAQ,SAAA8H,OACPtM,EAAMmM,EAASO,OAAOF,EAAYF,GACnCtM,EAAIX,SACP8L,EAAIjF,KAAKlG,MAGNmL,YAGT,SAAcqB,EAAoBF,OAC1BQ,EAAQN,EAAWO,WAAU,SAACC,UAAgCA,EAAQ9B,KAAOoB,EAAMpB,aAC1E,IAAX4B,GACFN,EAAWS,OAAOH,EAAO,GAClB,IAAI1N,GAAmB,IAEzB,IAAIA,GAAmB,EAAO,mBAAoB,iBAGpD8N,YAAP,SAAmBV,EAAoBH,OAC/BlB,EAA4B,UAClCkB,EAAO7H,SAAQ,SAAA8H,OACPtM,EAAMmM,SAAgBK,EAAYF,GACnCtM,EAAIX,SACP8L,EAAIjF,KAAKlG,MAGNmL,KAGFH,OAAP,SAAcqB,EAAgBO,UACrBP,EAAOrB,QAAO,SAACgC,UAAgCA,EAAQJ,UAAYA,QAGrEO,QAAP,SAAeX,GACbA,EAAWhI,SAAQ,SAACwI,UAAgCA,EAAQJ,SAAWI,EAAQJ,iBAStEQ,wBAEQlC,EAAwB0B,YAAxB1B,IAAAA,EAAa,aAAW0B,IAAAA,GAAmB,WAA3C1B,eAAwB0B,qBAG3ClN,YAAA,eACQM,EC3F0B,SAACqE,MAC/BgJ,MAAMC,QAAQjJ,IAAWA,EAAOxE,OAAS,EAAG,KACxCsL,EAA4B,UAClC9G,EAAOG,SAAQ,SAACiH,OAlBY9J,EAmBpB4L,GAnBoB5L,EAmBI8J,GAfrB9J,EAAqBjC,eAEzB,IAAIN,GAAmB,EAAO,mBAAoB,iBAJlD,IAAIA,GAAmB,EAAO,mBAAoB,kBAkBlDmO,EAAMlO,SACT8L,EAAIjF,KAAKqH,MAGNpC,QAEF,CAAC,IAAI/L,GAAmB,EAAO,qBDgFxBoO,CAAqB,CAAC,IAAIzN,EAAe9B,KAAKiN,IAAK,IAAIe,EAAchO,KAAK2O,kBAClF5M,EAAIH,OAAS,EACRG,EAAI,GAEN,IAAIZ,GAAmB,uCE1GG,qMCInC,SAAYqO,iBANO,EAOdA,SACIpO,QAAUoO,EAAKpO,aACfqO,YAAcD,EAAKC,iBACnB/L,MAAQ8L,EAAK9L,WACbrC,QAAUmO,EAAKnO,aACfC,WAAakO,EAAKlO,0MCN3B,SAAqBoC,EAAwBgM,YAAAA,IAAAA,GAAwB,cAAhDhM,oBAAwBgM"}