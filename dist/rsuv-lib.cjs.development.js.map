{"version":3,"file":"rsuv-lib.cjs.development.js","sources":["../src/RsuvValueAnd.ts","../src/RsuvErr.ts","../src/RsuvPaginationGyth.ts","../src/RsuvResultBoolPknz.ts","../src/RsuvResultTibo.ts","../src/RsuvConst.ts","../src/RsuvBnuwUtils.ts","../src/RsuvTxString.ts","../src/RsuvTxStringAB.ts","../src/RsuvTxStringAC.ts","../src/RsuvTxStringACB.ts","../src/RsuvTxStringACC.ts","../src/RsuvTuString.ts","../src/RsuvTxStringAD.ts","../src/RsuvTxStringADB.ts","../src/RsuvTuDateTime.ts","../src/RsuvTxEmail.ts","../node_modules/regenerator-runtime/runtime.js","../src/RsuvAdapterZrnx.tsx","../src/RsuvTxBoolean.ts","../src/RsuvCheckModels.ts","../src/RsuvResultAsau11.ts","../src/RsuvTuArray.ts","../src/RsuvTuTree.ts","../src/RsuvTuPromiseAllSettled.ts","../src/RsuvTxJsonServer.ts","../src/RsuvTxNumInt.ts","../src/RsuvTxNumIntAB.ts","../src/RsuvTxNumIntABB.ts","../src/RsuvTxNumIntAC.ts","../src/RsuvTxNumIntDiap.ts","../src/RsuvTxFieldName.ts","../src/RsuvTxSort.ts","../src/RsuvTxChecked.ts","../src/RsuvTxFieldNameLodash.ts","../src/RsuvSearchMode.ts","../src/RsuvSearchHow.ts","../src/RsuvEnCaseSensitive.ts","../src/RsuvEnDataTypes.ts","../src/RsuvEnSort.ts","../src/RsuvEnResultCrudSet.ts","../src/RsuvSearchElem.ts","../src/RsuvSearchElems.ts","../src/RsuvTuInfo.ts","../src/RsuvTu.ts"],"sourcesContent":["export class RsuvValueAnd {\n  /**\n   * МОТИВАЦИЯ: допустим мы хотим получить значение ячейки столбца, но такого столбца не существует; в этом случае\n   * возврат просто falsy значения (undefined и т.п.) не позволяет понять, это значение ячейки undefined или же это\n   * означает что ячейки не существует.\n   *\n   * @param value\n   * @param isValueExist (2) -- если здесь FALSE то это означает что значение поля {@link value} не следует брать во\n   * внимание т.к. на самом деле значения получить не удалось (например сущности из которой предполагается взять\n   * значение просто не существует)\n   */\n  constructor(readonly value: string, readonly isValueExist: boolean = true) {\n  }\n}\n","/**\n * Представляет какую-либо ошибку\n */\nexport class RsuvErr {\n  constructor(readonly code: string = '', readonly message: string = '') {\n  }\n\n  asString(): string {\n    return `code [${this.code}] message [${this.message}]`\n  }\n\n  static asStringB(oj: RsuvErr): string {\n    return `code [${oj.code}] message [${oj.message}]`\n  }\n}\n","/**\n * [[gyth]]\n * Сущность для пагинации. Передаём в конструктор \"общее кол-во элементов\" и \"кол-во элементов на странице\", и затем\n * по \"номеру страницы\" узнаём начальный и конечный индексы с помощью метода {@link indexesByPageNum}\n */\nexport class RsuvPaginationGyth {\n\n  /**\n   * Количество страниц\n   */\n  public readonly pageCount: number = 1\n\n  /**\n   * При интанцировании вычисляет поле {@link pageCount}\n   *\n   * @param elemsCount (1) -- общее количество элементов\n   * @param elemsPerPageCount (2) -- элементов на одной странице\n   */\n  constructor(readonly elemsCount: number = 20, readonly elemsPerPageCount: number = 10) {\n    // --- вычисление this.pageCount\n    if (elemsCount >= elemsPerPageCount) {\n      const pagesFloat = elemsCount / elemsPerPageCount\n      const pages = Math.trunc(pagesFloat)\n      const dev = pagesFloat - pages;\n      if (dev === 0) {\n        this.pageCount = pages\n      } else if (dev > 0) {\n        this.pageCount = pages + 1\n      }\n    }\n  }\n\n  /**\n   *\n   * @param pageNum (1) -- 1+, если больше реального количества страниц, то возвращаются данные для фактичесчки последней\n   * страницы\n   */\n  indexesByPageNum(pageNum: number): { indexStart: number, indexLast: number } {\n    const pageNum0 = pageNum > this.pageCount ? this.pageCount : pageNum;\n    // ---\n    const indexLast = pageNum0 * this.elemsPerPageCount - 1;\n    const indexStart = indexLast - this.elemsPerPageCount + 1;\n    return {indexStart, indexLast}\n  }\n\n  elemsByPageNum(elems: any[], pageNum: number): any[] {\n    const {indexStart, indexLast} = this.indexesByPageNum(pageNum);\n    return elems.slice(indexStart, indexLast + 1)\n  }\n\n}\n","\n/**\n * [[pknz]]\n *\n * представление результата вида \"успех/не-успех\"\n *\n * СМ. ТАКЖЕ: [220108130347]\n */\nexport class RsuvResultBoolPknz {\n\n  constructor(readonly success: boolean = true, readonly errCode: string = '', readonly errMessage: string = '') {\n  }\n\n  /**\n   * Возвращает информацию о том какие элементы из (1) являются {success: true, ...} а какие {success: false, ...}\n   * @param elems (1) --\n   */\n  static infoMulti(elems: RsuvResultBoolPknz[]): RsuvT2 {\n    const ret = {success: [], notSuccess: []} as RsuvT2\n    elems.forEach((el) => {\n      if (el.success) {\n        ret.success.push(el)\n      } else {\n        ret.notSuccess.push(el)\n      }\n    })\n    return ret\n  }\n\n  /**\n   * Возвращает TRUE если ВСЕ элементы (1) являются {success: true, ...}.\n   * Если elems это пустой массив, то возвращает FALSE\n   * @param elems (1) --\n   */\n  static successAllIsSugar(elems: RsuvResultBoolPknz[]): RsuvResultBoolPknz {\n    const info: RsuvT2 = RsuvResultBoolPknz.infoMulti(elems)\n    const b1 = info.notSuccess.length === 0 && info.success.length > 0\n    if (b1) {\n      return new RsuvResultBoolPknz(true)\n    }\n    if (info.notSuccess.length > 0) {\n      return info.notSuccess[0]\n    }\n    return new RsuvResultBoolPknz(false, '[[210725095419]]', '')\n  }\n}\n\nexport type RsuvT2 = {\n  success: RsuvResultBoolPknz[],\n  notSuccess: RsuvResultBoolPknz[]\n}\n","import { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\n\n/**\n * Представление результата \"успешно/неуспешно\" плюс значение <T> результата\n *\n * ID [[tibo]]\n */\nexport class RsuvResultTibo<T> {\n  success: boolean = true;\n  successCode?: string;\n  value?: T;\n  errCode?: string;\n  errMessage?: string;\n\n  constructor(tibo?: RsuvResultTibo<T>) {\n    if (tibo) {\n      this.success = tibo.success;\n      this.successCode = tibo.successCode;\n      this.value = tibo.value;\n      this.errCode = tibo.errCode;\n      this.errMessage = tibo.errMessage;\n    }\n  }\n\n  /**\n   * [[220108130347]]\n   * @param pknz\n   */\n  static fromPknz(pknz: RsuvResultBoolPknz): RsuvResultTibo<any> {\n    if (pknz) {\n      return new RsuvResultTibo({\n        success: pknz.success,\n        errCode: pknz.errCode,\n        errMessage: pknz.errMessage,\n      });\n    }\n    return new RsuvResultTibo({\n      success: false,\n      errCode: '[[210725095953]]',\n      errMessage: '',\n    });\n  }\n}\n","/*\nконстанты разные\n */\n\n/**\n * Когда что-то уже существует\n */\nexport const RSUV_AL_ALREADY_EXIST = 'RSUV_AL_ALREADY_EXIST';\n","import { RsuvBnuwNT } from './RsuvBnuwNT';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\n\n/**\n * Вызывает (1) и возвращает его результат если не было брошено исключения внутри (1), иначе возвращает null\n * @param fn (1) --\n */\nexport function bnuwFactory<T extends RsuvBnuwNT>(fn: () => T): T | null {\n  try {\n    return fn()\n  } catch (err) {\n    return null\n  }\n}\n\n/**\n * Выполняет [bnuw]-проверку сущности (1) и если результат неуспешен то брасает исключение с результатом этой проверки\n * @param obj\n */\nexport function bnuwUtilsThrowIf(obj: RsuvBnuwNT) {\n  const validRes = obj.bnuwIsValid()\n  if (!validRes.success) {\n    throw validRes\n  }\n}\n\n/**\n * Проверяет значение (1)\n * @param value (1) --\n */\nexport const bnuwUtilsVerify = (value: RsuvBnuwNT | any): RsuvResultBoolPknz => {\n  if (!value) {\n    return new RsuvResultBoolPknz(false, '[[210711215605]]', 'value is falsy')\n  }\n  const res = (value as RsuvBnuwNT).bnuwIsValid();\n  if (!res) {\n    return new RsuvResultBoolPknz(false, '[[210711215805]]', 'invalid value')\n  }\n  return res;\n}\n\n/**\n * Если возвращает пустой массив, значит все элементы (1) валидные, иначе в массиве результы неудачных проверок\n * @param values (1) -- элементы для проверки; пустой массив не валиден\n */\nexport const bnuwUtilsVerifyMulti = (values: any[]): RsuvResultBoolPknz[] => {\n  if (Array.isArray(values) && values.length > 0) {\n    const ret: RsuvResultBoolPknz[] = [];\n    values.forEach((el) => {\n      const verif = bnuwUtilsVerify(el)\n      if (!verif.success) {\n        ret.push(verif)\n      }\n    })\n    return ret;\n  }\n  return [new RsuvResultBoolPknz(false, '[[210711221552]]')]\n}\n","import { RsuvBnuwNT } from './RsuvBnuwNT';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport _ from 'lodash';\nimport { bnuwUtilsThrowIf } from './RsuvBnuwUtils';\n\n/**\n * Представляет строку не нулевой длины\n *\n * ID [[1636807341]]\n *\n * @implements RsuvBnuwNT\n */\nexport class RsuvTxString implements RsuvBnuwNT {\n  constructor(public val: string) {\n    bnuwUtilsThrowIf(this)\n  }\n\n  bnuwIsValid(): RsuvResultBoolPknz {\n    try {\n      if (!this.val) {\n        return new RsuvResultBoolPknz(false, '[[210705185504]]', 'is falsy');\n      }\n      if (!_.isString(this.val)) {\n        return new RsuvResultBoolPknz(\n          false,\n          '[[210706090804]]',\n          'is not string'\n        );\n      }\n      if (this.val.length < 1) {\n        return new RsuvResultBoolPknz(false, '[[210705185559]]', 'length < 1');\n      }\n    } catch (err) {\n      return new RsuvResultBoolPknz(\n        false,\n        '[[210705185560]]',\n        (err as Error).message\n      );\n    }\n    return new RsuvResultBoolPknz(true);\n  }\n}\n","import { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { RsuvTxString } from './RsuvTxString';\n\n/**\n * Представляет строку которая: (не нулевой длины) И (не содержит пробелов/переносов)\n */\nexport class RsuvTxStringAB extends RsuvTxString {\n  bnuwIsValid(): RsuvResultBoolPknz {\n    try {\n      const res = super.bnuwIsValid();\n      if (!res.success) {\n        return res;\n      }\n      // ---\n      if (/\\s/.test(this.val)) {\n        return new RsuvResultBoolPknz(\n          false,\n          '[[210706092510]]',\n          'includes whitespace(s)'\n        );\n      }\n    } catch (err) {\n      return new RsuvResultBoolPknz(\n        false,\n        '[[210706092135]]',\n        (err as Error).message\n      );\n    }\n    return new RsuvResultBoolPknz(true);\n  }\n}\n","import { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { RsuvTxString } from './RsuvTxString';\n\n/**\n * Представляет строку которая: (не нулевой длины) И (состоит только из символов [a-zA-Z0-9_])\n *\n * ID [[1636807311]]\n * @implements RsuvBnuwNT\n */\nexport class RsuvTxStringAC extends RsuvTxString {\n  bnuwIsValid(): RsuvResultBoolPknz {\n    try {\n      const res = super.bnuwIsValid();\n      if (!res.success) {\n        return res;\n      }\n      // ---\n      if (!/^[a-zA-Z0-9_]+$/.test(this.val)) {\n        return new RsuvResultBoolPknz(\n          false,\n          '[[1636300398]]',\n          'allowable only [a-zA-Z0-9_] symbols'\n        );\n      }\n    } catch (err) {\n      return new RsuvResultBoolPknz(\n        false,\n        '[[1636300404]]',\n        (err as Error).message\n      );\n    }\n    return new RsuvResultBoolPknz(true);\n  }\n}\n","import { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { RsuvTxStringAC } from './RsuvTxStringAC';\n\n/**\n * Представляет строку которая: (не нулевой длины) И (состоит только из символов [a-zA-Z0-9_])\n * И (начинается не с цифры)\n *\n * ID [[1636807220]]\n * @implements RsuvBnuwNT\n */\nexport class RsuvTxStringACB extends RsuvTxStringAC {\n  bnuwIsValid(): RsuvResultBoolPknz {\n    try {\n      const res = super.bnuwIsValid();\n      if (!res.success) {\n        return res;\n      }\n      // ---\n      if (/^[0-9]$/.test(this.val[0])) {\n        return new RsuvResultBoolPknz(\n          false,\n          '[[1636301354]]',\n          'first number is not allowable'\n        );\n      }\n    } catch (err) {\n      return new RsuvResultBoolPknz(\n        false,\n        '[[1636301361]]',\n        (err as Error).message\n      );\n    }\n    return new RsuvResultBoolPknz(true);\n  }\n}\n","import { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { RsuvTxStringAC } from './RsuvTxStringAC';\n\n/**\n * Представляет строку которая: (не нулевой длины) И (состоит только из символов [0-9] т.е. только из цифр)\n *\n * ID [[211210125644]]\n * @implements RsuvBnuwNT\n */\nexport class RsuvTxStringACC extends RsuvTxStringAC {\n  bnuwIsValid(): RsuvResultBoolPknz {\n    try {\n      const res = super.bnuwIsValid();\n      if (!res.success) {\n        return res;\n      }\n      // ---\n      if (!/^[0-9]+$/.test(this.val)) {\n        return new RsuvResultBoolPknz(\n          false,\n          '[[211210125801]]',\n          'only numbers allowable'\n        );\n      }\n    } catch (err) {\n      return new RsuvResultBoolPknz(\n        false,\n        '[[211210125818]]',\n        (err as Error).message\n      );\n    }\n    return new RsuvResultBoolPknz(true);\n  }\n}\n","/*\nутилиты для String\n */\n\nimport { RsuvTxString } from './RsuvTxString';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { RsuvResultTibo } from './RsuvResultTibo';\nimport _ from 'lodash';\n\n/**\n * Возвращает TRUE если строка str это falsy, строка нулевой длины, или строка из одних пробелов\n *\n * source [210217114100]\n */\nexport function isEmptyOrWhitespaces(str: any): Boolean {\n  return (!str || str.length === 0 || /^\\s*$/.test(str))\n}\n\n/**\n * ID [[210713104651]] rev 1 1.0 2021-07-13\n * source ID [210518234642] rev 1 1.0 2021-05-18\n *\n * Возвращает сколько раз строка (2) встречается в строке (1).\n * Чувствительна к регистру.\n * Если не находит вхождений, и в невалидных случаях, возвращает 0.\n * @param target string (1) -- например 'aba'\n * @param substr string (2) -- например 'a'\n * @return number например 2\n */\nexport function substrCount(target: string, substr: string): number {\n  if (target && substr) {\n    const ret = target.split(substr).length - 1\n    return ret >= 0 ? ret : 0;\n  }\n  return 0;\n}\n\n/**\n * ID [[210713104605]] rev 1 1.0.0 2021-07-13\n * source ID [210518234643] rev 1 1.0 2021-05-19\n *\n * {тоже что и А только не чувствительна к регистру}\n *\n * Возвращает сколько раз строка (2) встречается в строке (1).\n * Не чувствительна к регистру.\n * Если не находит вхождений, и в невалидных случаях, возвращает 0.\n * @param target string (1) -- например 'aba'\n * @param substr string (2) -- например 'A'\n * @return number например 2\n */\nexport function substrCountB(target: string, substr: string): number {\n  if (target && substr) {\n    const ret = target.toLowerCase().split(substr.toLowerCase()).length - 1\n    return ret >= 0 ? ret : 0;\n  }\n  return 0;\n}\n\n/**\n * Возвращает информацию о том в каких местах строки (1) встречается строка (2).\n * Допускает содержание в (2) символов считающихся специальными для регулярных выражений - экранирует их.\n * ID [[210801094836]] rev 1 1.0.0 2021-08-01\n * @param target (1) --\n * @param substr (2) --\n * @param ignoreCase (3) -- TRUE если нужно игнорировать регистр символов\n * @return RsuvT7[] - пустой массив если вхождений не найдено и при нештатах\n */\nexport function substrIndexes(target: string, substr: string, ignoreCase: boolean): RsuvT7[] {\n  const ret: RsuvT7[] = []\n  if (!target || !substr\n    || !_.isString(target) || !_.isString(substr)\n    || target.length < 1 || substr.length < 1\n    || target.length < substr.length) {\n    return ret\n  }\n  const substrEscape = _.escapeRegExp(substr);\n  const rg = new RegExp(substrEscape, 'g' + (ignoreCase ? 'i' : ''))\n  let res: any = true;\n  while (res) {\n    res = rg.exec(target)\n    if (res) {\n      ret.push(new RsuvT7(res.index, res.index + substr.length))\n    }\n  }\n  return ret\n}\n\n/**\n * Предоставляет полную информацию о том как строка (2) соотносится со строкой (1), например содержит ли (1) подстроку\n * (2), начинается ли с неё, заканчивается ли ей, имеет ли с ней полное соответствие. Вся эта информация проверяется для\n * двух вариантов - с учетом регистра и без учета регистра символов (этим отличается от версии А текущей функции)\n *\n * @param strTarget (1) --\n * @param strSub (2) --\n * @return RsuvResultTibo<RsuvT5>\n */\nexport function stringsTwoInfoB(strTarget: RsuvTxString, strSub: RsuvTxString): RsuvResultTibo<RsuvT5> {\n  // --- verify\n  const verif: RsuvResultBoolPknz = RsuvResultBoolPknz.successAllIsSugar([strTarget.bnuwIsValid(), strSub.bnuwIsValid()])\n  if (!verif.success) {\n    return RsuvResultTibo.fromPknz(verif)\n  }\n  // ---\n  const strTargetRaw = strTarget.val\n  const strSubRaw = strSub.val\n  // ---\n  const t5 = new RsuvT5()\n  // ---\n  if (strSubRaw.length > strTargetRaw.length) {\n    return new RsuvResultTibo({success: true, value: t5}); // <=== RETURN\n  }\n  // --- --- без учета регистра\n  const t4NoSens = new RsuvT4()\n  // --- full match\n  if (strTargetRaw.length === strSubRaw.length && strTargetRaw.toLowerCase() === strSubRaw.toLowerCase()) {\n    t4NoSens.rsuvT3.push(RSUV_T3.COMPLETE_MATCH)\n    t4NoSens.rsuvT3.push(RSUV_T3.STARTED)\n    t4NoSens.rsuvT3.push(RSUV_T3.ENDED)\n    t4NoSens.rsuvT3.push(RSUV_T3.CONTAINS)\n    t4NoSens.containsCount = 1\n    // ---\n    t4NoSens.containsIndexes.push(new RsuvT7(0, strSubRaw.length))\n  } else {\n    const indexes = substrIndexes(strTargetRaw, strSubRaw, true)\n    t4NoSens.containsIndexes = indexes\n    // -- contains\n    t4NoSens.containsCount = indexes.length\n    if (t4NoSens.containsCount > 0) {\n      t4NoSens.rsuvT3.push(RSUV_T3.CONTAINS)\n    }\n    // -- started\n    if (strTargetRaw.substring(0, strSubRaw.length).toLowerCase() === strSubRaw.toLowerCase()) {\n      t4NoSens.rsuvT3.push(RSUV_T3.STARTED)\n    }\n    // -- ended\n    if (strTargetRaw.substring(strTargetRaw.length - strSubRaw.length, strTargetRaw.length).toLowerCase() === strSubRaw.toLowerCase()) {\n      t4NoSens.rsuvT3.push(RSUV_T3.ENDED)\n    }\n  }\n  // --- --- с учетом регистра\n  const t4Sens = new RsuvT4()\n  if (strTargetRaw.length === strSubRaw.length && strTargetRaw === strSubRaw) {\n    t4Sens.rsuvT3.push(RSUV_T3.COMPLETE_MATCH)\n    t4Sens.rsuvT3.push(RSUV_T3.STARTED)\n    t4Sens.rsuvT3.push(RSUV_T3.ENDED)\n    t4Sens.rsuvT3.push(RSUV_T3.CONTAINS)\n    t4Sens.containsCount = 1\n    t4Sens.containsIndexes.push(new RsuvT7(0, strSubRaw.length))\n  } else {\n    const indexes2 = substrIndexes(strTargetRaw, strSubRaw, false)\n    t4Sens.containsIndexes = indexes2\n    t4Sens.containsCount = indexes2.length\n    if (t4Sens.containsCount > 0) {\n      t4Sens.rsuvT3.push(RSUV_T3.CONTAINS)\n    }\n    // -- started\n    if (strTargetRaw.substring(0, strSubRaw.length) === strSubRaw) {\n      t4Sens.rsuvT3.push(RSUV_T3.STARTED)\n    }\n    // -- ended\n    if (strTargetRaw.substring(strTargetRaw.length - strSubRaw.length, strTargetRaw.length) === strSubRaw) {\n      t4Sens.rsuvT3.push(RSUV_T3.ENDED)\n    }\n  }\n  // --- ---\n  t5.sensitive = t4Sens\n  t5.notSensitive = t4NoSens\n  // ---\n  return new RsuvResultTibo({success: true, value: t5})\n}\n\n/**\n * Предоставляет полную информацию о том как строка (2) соотносится со строкой (1), например содержит ли (1) подстроку\n * (2), начинается ли с неё, заканчивается ли ей, имеет ли с ней полное соответствие, на каких индексах начинается и\n * заканчивается подстрока (2) в строке (1). Вся эта информация проверяется для\n * двух варинатов - с учетом регистра и без учета регистра символов (3)\n * ID [[210801103621]] rev 1 1.0.0 2021-08-01\n * @param strTarget (1) --\n * @param strSub (2) --\n * @param ignoreCase (3) -- TRUE если нужно игнорировать регистр символов\n * @return RsuvResultTibo<RsuvT4>\n */\nexport function stringsTwoInfo(strTarget: RsuvTxString, strSub: RsuvTxString, ignoreCase: boolean = true): RsuvResultTibo<RsuvT4> {\n  // --- verify\n  const verif: RsuvResultBoolPknz = RsuvResultBoolPknz.successAllIsSugar([strTarget.bnuwIsValid(), strSub.bnuwIsValid()])\n  if (!verif.success) {\n    return RsuvResultTibo.fromPknz(verif)\n  }\n  // ---\n  const strTargetRaw = strTarget.val\n  const strSubRaw = strSub.val\n  // ---\n  let t4 = new RsuvT4();\n  if (strSubRaw.length > strTargetRaw.length) {\n    return new RsuvResultTibo({success: true, value: t4}); // <=== RETURN\n  }\n  // --- --- без учета регистра\n  if (ignoreCase) {\n    // --- full match\n    if (strTargetRaw.length === strSubRaw.length && strTargetRaw.toLowerCase() === strSubRaw.toLowerCase()) {\n      t4.rsuvT3.push(RSUV_T3.COMPLETE_MATCH)\n      t4.rsuvT3.push(RSUV_T3.STARTED)\n      t4.rsuvT3.push(RSUV_T3.ENDED)\n      t4.rsuvT3.push(RSUV_T3.CONTAINS)\n      t4.containsCount = 1\n      // ---\n      t4.containsIndexes.push(new RsuvT7(0, strSubRaw.length))\n    } else {\n      const indexes = substrIndexes(strTargetRaw, strSubRaw, true)\n      t4.containsIndexes = indexes\n      // -- contains\n      t4.containsCount = indexes.length\n      if (t4.containsCount > 0) {\n        t4.rsuvT3.push(RSUV_T3.CONTAINS)\n      }\n      // -- started\n      if (strTargetRaw.substring(0, strSubRaw.length).toLowerCase() === strSubRaw.toLowerCase()) {\n        t4.rsuvT3.push(RSUV_T3.STARTED)\n      }\n      // -- ended\n      if (strTargetRaw.substring(strTargetRaw.length - strSubRaw.length, strTargetRaw.length).toLowerCase() === strSubRaw.toLowerCase()) {\n        t4.rsuvT3.push(RSUV_T3.ENDED)\n      }\n    }\n  } else {\n    // --- --- с учетом регистра\n    if (strTargetRaw.length === strSubRaw.length && strTargetRaw === strSubRaw) {\n      t4.rsuvT3.push(RSUV_T3.COMPLETE_MATCH)\n      t4.rsuvT3.push(RSUV_T3.STARTED)\n      t4.rsuvT3.push(RSUV_T3.ENDED)\n      t4.rsuvT3.push(RSUV_T3.CONTAINS)\n      t4.containsCount = 1\n      t4.containsIndexes.push(new RsuvT7(0, strSubRaw.length))\n    } else {\n      const indexes2 = substrIndexes(strTargetRaw, strSubRaw, false)\n      t4.containsIndexes = indexes2\n      t4.containsCount = indexes2.length\n      if (t4.containsCount > 0) {\n        t4.rsuvT3.push(RSUV_T3.CONTAINS)\n      }\n      // -- started\n      if (strTargetRaw.substring(0, strSubRaw.length) === strSubRaw) {\n        t4.rsuvT3.push(RSUV_T3.STARTED)\n      }\n      // -- ended\n      if (strTargetRaw.substring(strTargetRaw.length - strSubRaw.length, strTargetRaw.length) === strSubRaw) {\n        t4.rsuvT3.push(RSUV_T3.ENDED)\n      }\n    }\n  }\n  // ---\n  return new RsuvResultTibo({success: true, value: t4})\n}\n\n/**\n * [[asau24]]\n * СМ. ТАКЖЕ: [asau22]\n */\nexport enum RSUV_T3 {\n  // target начинается с sub\n  STARTED = 'rsuv_t3_started',\n  // target заканчивается на sub\n  ENDED = 'rsuv_t3_ended',\n  // target содержит sub\n  CONTAINS = 'rsuv_t3_contains',\n  // target полностью совпадает с sub\n  COMPLETE_MATCH = 'rsuv_t3_complete_match'\n}\n\n/**\n * Учёт регистра символов\n */\nexport enum RSUV_T6_CASE {\n  SENSITIVE = 'rsuv_t6_case_sensitive',\n  NOT_SENSITIVE = 'rsuv_t6_not_case_sensitive'\n}\n\nexport class RsuvT4 {\n  // сколько раз sub встречается в target\n  containsCount: number = 0\n  containsIndexes: RsuvT7[] = []\n  rsuvT3: RSUV_T3[] = []\n}\n\nexport class RsuvT5 {\n  // информация для варианта \"чувствительно к регистру\"\n  sensitive: RsuvT4 = new RsuvT4()\n  // информация для варианта \"НЕ чувствительно к регистру\"\n  notSensitive: RsuvT4 = new RsuvT4()\n}\n\nexport class RsuvT7 {\n  constructor(public startIndex: number = 0, public endIndex: number = 0) {\n  }\n}\n","import { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { RsuvTxString } from './RsuvTxString';\nimport { isEmptyOrWhitespaces } from './RsuvTuString';\n\n/**\n * Представляет строку которая: (не нулевой длины) И (не состоит из одних пробелов/переносов)\n */\nexport class RsuvTxStringAD extends RsuvTxString {\n  bnuwIsValid(): RsuvResultBoolPknz {\n    try {\n      const res = super.bnuwIsValid();\n      if (!res.success) {\n        return res;\n      }\n      // ---\n      if (isEmptyOrWhitespaces(this.val)) {\n        return new RsuvResultBoolPknz(\n          false,\n          '[[210705191242]]',\n          'contains only whitespaces'\n        );\n      }\n    } catch (err) {\n      return new RsuvResultBoolPknz(\n        false,\n        '[[210705190613]]',\n        (err as Error).message\n      );\n    }\n    return new RsuvResultBoolPknz(true);\n  }\n}\n","import { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { RsuvTxStringAD } from './RsuvTxStringAD';\n\n/**\n * Представляет строку которая: (не нулевой длины) И (не состоит из одних пробелов/переносов) И (не начинается с пробела/переноса)\n * И (не заканчивается пробелом/переносом)\n */\nexport class RsuvTxStringADB extends RsuvTxStringAD {\n  bnuwIsValid(): RsuvResultBoolPknz {\n    try {\n      const res = super.bnuwIsValid();\n      if (!res.success) {\n        return res;\n      }\n      // ---\n      if (/^\\s/.test(this.val)) {\n        return new RsuvResultBoolPknz(\n          false,\n          '[[210705191717]]',\n          'started with whitespace'\n        );\n      }\n      if (/\\s$/.test(this.val)) {\n        return new RsuvResultBoolPknz(\n          false,\n          '[[210705191826]]',\n          'ended with whitespace'\n        );\n      }\n    } catch (err) {\n      return new RsuvResultBoolPknz(\n        false,\n        '[[210705191508]]',\n        (err as Error)?.message\n      );\n    }\n    return new RsuvResultBoolPknz(true);\n  }\n}\n","import dayjs from 'dayjs';\nimport _ from 'lodash';\n\n/*\nПОНЯТИЯ:\n-- [yata] - {number} милисекунды с 01.01.1970\n-- [eavv] - {number} секунды с 01.01.1970\n-- [necz] - {string} [yata] в виде строки\n-- [tafb] - {string} [eavv] в виде строки\n-- [rvuo] - {string} формат YYYY-MM-DDTHH:mm, например '2021-12-12T12:04'\n */\n\nexport enum DATETIME {\n  YATA = 'yata',\n  NECZ = 'necz',\n  RVUO = 'rvuo'\n}\n\nexport class ResultAsau36<T> {\n  constructor(public success: boolean, public value: T, public code: number) {\n  }\n}\n\n// export function convert(from: DATETIME, to: DATETIME, fromVal: any): ResultAsau36<any> {\n//   if (!from) {\n//     return new ResultAsau36(false, null, 1)\n//   }\n//   if (!to) {\n//     return new ResultAsau36(false, null, 2)\n//   }\n//   if (!fromVal) {\n//     return new ResultAsau36(false, null, 3)\n//   }\n//\n// }\n\n/**\n * Преобразование формата [yata] (1) в формат [rvuo].\n * @param yata {number} (1) -- [yata], например 1637347161129\n * @return null если (1) не finite-число\n */\nexport function rvuoFromYata(yata: number | any): string | null {\n  if (!yataIs(yata)) {\n    return null\n  }\n  return dayjs(yata).format('YYYY-MM-DDTHH:mm');\n}\n\nexport function yataFromRvuo(rvuo: string | any): ResultAsau36<number> {\n  if (!_.isString(rvuo)) {\n    return new ResultAsau36<number>(false, 0, 2)\n  }\n  const necz = rvuoIs(rvuo)\n  if (necz) {\n    const yata = _.toInteger(necz)\n    return new ResultAsau36<number>(true, yata, 0)\n  }\n  return new ResultAsau36<number>(false, 0, 1)\n}\n\nexport function yataIs(yata: number | any): boolean {\n  if (!_.isFinite(yata)) {\n    return false;\n  }\n  return true;\n}\n\nexport function yataFromEavv(eavv: number | any): ResultAsau36<number> {\n  if (!eavvIs(eavv)) {\n    return new ResultAsau36<number>(false, 0, 1)\n  }\n  const yata = eavv * 1000;\n  return new ResultAsau36<number>(true, yata, 0)\n}\n\n/**\n * Возвращает {success: true, value: true, ...} если дата (1) не достигла даты (2) (т.е. меньше даты (2))\n * @param yata (1) -- [yata]\n * @param yataExpire (2) -- [yata]\n */\nexport function yataIsActual(yata: number | any, yataExpire: number | any): ResultAsau36<boolean> {\n  if (!yataIs(yata)) {\n    return new ResultAsau36<boolean>(false, false, 1)\n  }\n  if (!yataIs(yataExpire)) {\n    return new ResultAsau36<boolean>(false, false, 2)\n  }\n  if (yata > yataExpire) {\n    return new ResultAsau36<boolean>(true, false, 0)\n  }\n  return new ResultAsau36<boolean>(true, true, 0)\n}\n\nexport function eavvIs(eavv: number | any): boolean {\n  if (!_.isFinite(eavv)) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Возвращает [necz] ([yata] как строка) от (1) если (1) это валидный [rvuo], иначе возвращает null\n * @param rvuo (1) -- [rvuo], например '2021-12-10T12:04'\n */\nexport function rvuoIs(rvuo: string | any): string | null {\n  if (!_.isString(rvuo)) {\n    return null\n  }\n  const ex = /^(\\d\\d\\d\\d+)-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d)$/.exec(rvuo)\n  if (ex) {\n    const month = Number(ex[2])\n    const day = Number(ex[3])\n    const hour = Number(ex[4])\n    const minute = Number(ex[5])\n    if (month < 1 || month > 12) {\n      return null\n    }\n    if (day < 1 || day > 31) {\n      return null\n    }\n    if (hour < 0 && hour > 24) {\n      return null\n    }\n    if (minute < 0 && minute > 59) {\n      return null\n    }\n  }\n  // ---\n  const day = dayjs(rvuo)\n  const yata = day.toDate().getTime()\n  if (!_.isFinite(yata)) {\n    return null;\n  }\n  return yata + '';\n}\n","import { RsuvTxStringAB } from './RsuvTxStringAB';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport EmailValidator from 'email-validator';\n\nexport class RsuvTxEmail extends RsuvTxStringAB {\n  bnuwIsValid(): RsuvResultBoolPknz {\n    const resV = EmailValidator.validate(this.val)\n    if(!resV) {\n      return new RsuvResultBoolPknz(false, '[[210706113857]]', 'EmailValidator')\n    }\n\n    // const resValid = super.bnuwIsValid();\n    // if (!resValid.success) {\n    //   return resValid;\n    // }\n    // // ---\n    // const b1 = new RegExp(\n    //   /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/g,\n    // ).test(this.val)\n    // if (!b1) {\n    //   return new RsuvResultBoolPknz(false, '[[210706105956]]', 'is not email');\n    // }\n    // const splited = this.val.split('@');\n    // if (splited.length > 2) {\n    //   return new RsuvResultBoolPknz(false, '[[210706112944]]', 'only one @ allowed');\n    // }\n    // if(splited[0].length > 64) {\n    //   return new RsuvResultBoolPknz(false, '[[210706113459]]', 'local-part is > 64 length');\n    // }\n    return new RsuvResultBoolPknz(true)\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/*\n[[zrnx]]\n */\n\n/**\n * [[rkyr]]\n */\nimport { RsuvDataSourceAecrNT } from './RsuvDataSourceAecrNT';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { RsuvPaginationGyth } from './RsuvPaginationGyth';\n\n/**\n * @class\n */\nexport class RsuvZrnxSubData<T> {\n\n  /** @constructor */\n  constructor(\n    /**\n     * номер страницы\n     */\n    public page: number = 0,\n    /**\n     * общее количество страниц\n     */\n    public pageCount: number = 1,\n    /**\n     * общее количество элементов\n     */\n    public elemsAllCount: number = 0,\n    /**\n     * коллекция элементов страницы\n     */\n    public elemsOfPage: T[] = []\n  ) {\n  }\n}\n\n/**\n * [[zrnx]]\n *\n * Сущность для использования в качестве посредника между абстрактным источником-данных (интерефейс\n * {@link RsuvDataSourceAecrNT}) и UI-списком-с-пагинацией.\n *\n * При вызове {@link make} делаются обращения к {@link dataSource} и на базе полученных данных вычисляются поля {@link page}\n * {@link elemsAllCount}, {@link elemsOfPage}, {@link pageCount}. Эти поля можно получить с помощью метода {@link dataGet}\n * в виде типа {@link RsuvZrnxSubData} для последующего использования в качестве входных данных для UI-списка-с-пагинацией\n * \n * @class\n */\nexport class RsuvAdapterZrnx<T> {\n  private page: number = 0\n  private elemsAllCount: number = 0\n  private elemsOfPage: T[] = []\n  private pageCount: number = 0\n\n  /**\n   * @constructor\n   * @param perPage (1) -- число-записей-на-странице, 1+\n   * @param dataSource (2) -- источник-данных\n   */\n  constructor(readonly perPage: number, readonly dataSource: RsuvDataSourceAecrNT<T>) {\n  }\n\n  /**\n   * Запрос данных и вычисление полей текущего объекта\n   *\n   * @async\n   * @param pageNum (1) -- номер страницы\n   * @param last (2) -- если TRUE, то (1) игнирируется и вычисление выполняется для последней страницы\n   */\n  async make(pageNum: number, last: boolean = false): Promise<RsuvResultBoolPknz> {\n    const elemsCount = await this.dataSource.elemsAllCountGet();\n    // ---\n    const rmPagination = new RsuvPaginationGyth(elemsCount, this.perPage);\n    const pageCount = rmPagination.pageCount\n    if (last) {\n      this.page = pageCount\n    } else {\n      this.page = pageCount < pageNum ? pageCount : pageNum;\n    }\n    this.elemsAllCount = elemsCount\n    this.pageCount = pageCount\n    // ---\n    const {indexStart, indexLast} = rmPagination.indexesByPageNum(this.page)\n    this.elemsOfPage = await this.dataSource.elemsGet(indexStart, indexLast - indexStart + 1)\n    // ---\n    return new RsuvResultBoolPknz() // TODO нужно продумать по части ошибок\n  }\n\n  /**\n   * Получение результатов вычислений\n   */\n  dataGet(): RsuvZrnxSubData<T> {\n    return new RsuvZrnxSubData<T>(this.page, this.pageCount, this.elemsAllCount, this.elemsOfPage)\n  }\n\n}\n\n\n","/*\n * Представляет boolean\n */\n\nimport { RsuvBnuwNT } from './RsuvBnuwNT';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport _ from 'lodash';\nimport { bnuwUtilsThrowIf } from './RsuvBnuwUtils';\n\n\nexport class RsuvTxBoolean implements RsuvBnuwNT {\n  constructor(public val: boolean) {\n    bnuwUtilsThrowIf(this);\n  }\n\n  bnuwIsValid(): RsuvResultBoolPknz {\n    try {\n      if (!_.isBoolean(this.val)) {\n        return new RsuvResultBoolPknz(false, '[[210711220826]]', 'is not boolean')\n      }\n    } catch (err) {\n      return new RsuvResultBoolPknz(false, '[[210705185560]]', (err as Error).message)\n    }\n    return new RsuvResultBoolPknz(true);\n  }\n}\n","/*\nСущности для работы с checked-списками (списки хранящие информацию о том какой элемент чекнут, какой нет)\n\n[[ecxm]] - массив из [gnpw]-объектов или пустой массив\n[[gnpw]] - объект вида {id: string, checked: boolean}\n */\n\nimport { RsuvBnuwNT } from './RsuvBnuwNT';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { bnuwUtilsVerifyMulti } from './RsuvBnuwUtils';\nimport { RsuvTxBoolean } from './RsuvTxBoolean';\nimport { RsuvTxStringAB } from './RsuvTxStringAB';\n\n/**\n * Вместо этого типа нужно передавать тип UnwrapRef<RsuvCheckModelGnpw[]>, т.е. value из ref сделанного на RsuvCheckModelGnpw[]\n * <code lang=\"js\">\n *   ref([new RsuvCheckModelGnpw('1', false)]).value\n * </code>\n */\nexport type RsuvT1 = any[]\n\nexport class RsuvEcxm {\n  static find(models: RsuvT1, id: string) {\n    return models.find((model: RsuvCheckModelGnpw) => model.id === id);\n  }\n\n  /**\n   * Добавляет новый элемент (2) в конец (1)\n   * @param modelsBack (1) --\n   * @param model\n   */\n  static append(modelsBack: RsuvT1, model: RsuvCheckModelGnpw): RsuvResultBoolPknz {\n    const fModel = RsuvEcxm.find(modelsBack, model.id);\n    if (fModel) {\n      return new RsuvResultBoolPknz(false, '[[210712155908]]', 'already exist');\n    }\n    modelsBack.push(model);\n    return new RsuvResultBoolPknz(true);\n  }\n\n  static appendMulti(modelsBack: RsuvT1, models: RsuvCheckModelGnpw[]): RsuvResultBoolPknz[] {\n    const ret: RsuvResultBoolPknz[] = [];\n    models.forEach(model => {\n      const res = RsuvEcxm.append(modelsBack, model);\n      if (!res.success) {\n        ret.push(res);\n      }\n    });\n    return ret;\n  }\n\n  static update(modelsBack: RsuvT1, model: RsuvCheckModelGnpw): RsuvResultBoolPknz {\n    const elem = RsuvEcxm.find(modelsBack, model.id);\n    if (elem) {\n      elem.checked = model.checked;\n      return new RsuvResultBoolPknz(true);\n    }\n    return new RsuvResultBoolPknz(false, '[[210712160222]]', 'not finded');\n  }\n\n  static updateMulti(modelsBack: RsuvT1, models: RsuvCheckModelGnpw[]): RsuvResultBoolPknz[] {\n    const ret: RsuvResultBoolPknz[] = [];\n    models.forEach(model => {\n      const res = RsuvEcxm.update(modelsBack, model);\n      if (!res.success) {\n        ret.push(res);\n      }\n    });\n    return ret;\n  }\n\n  static delete(modelsBack: RsuvT1, model: RsuvCheckModelGnpw): RsuvResultBoolPknz {\n    const index = modelsBack.findIndex((elModel: RsuvCheckModelGnpw) => elModel.id === model.id);\n    if (index !== -1) {\n      modelsBack.splice(index, 1);\n      return new RsuvResultBoolPknz(true);\n    }\n    return new RsuvResultBoolPknz(false, '[[210712160441]]', 'not finded');\n  }\n\n  static deleteMulti(modelsBack: RsuvT1, models: RsuvCheckModelGnpw[]): RsuvResultBoolPknz[] {\n    const ret: RsuvResultBoolPknz[] = [];\n    models.forEach(model => {\n      const res = RsuvEcxm.delete(modelsBack, model);\n      if (!res.success) {\n        ret.push(res);\n      }\n    });\n    return ret;\n  }\n\n  static filter(models: RsuvT1, checked: boolean) {\n    return models.filter((elModel: RsuvCheckModelGnpw) => elModel.checked === checked);\n  }\n\n  static inverse(modelsBack: RsuvT1) {\n    modelsBack.forEach((elModel: RsuvCheckModelGnpw) => elModel.checked = !elModel.checked);\n  }\n\n  static selectAll(modelsBack: RsuvT1) {\n    modelsBack.forEach((elModel: RsuvCheckModelGnpw) => {\n      if (!elModel.checked) {\n        elModel.checked = true;\n      }\n    })\n  }\n\n  static deselectAll(modelsBack: RsuvT1) {\n    modelsBack.forEach((elModel: RsuvCheckModelGnpw) => {\n      if (elModel.checked) {\n        elModel.checked = false;\n      }\n    })\n  }\n}\n\n\n/**\n * Представление [gnpw]\n */\nexport class RsuvCheckModelGnpw implements RsuvBnuwNT {\n\n  constructor(public id: string = '', public checked: boolean = false) {\n  }\n\n  bnuwIsValid(): RsuvResultBoolPknz {\n    const res = bnuwUtilsVerifyMulti([new RsuvTxStringAB(this.id), new RsuvTxBoolean(this.checked)])\n    if (res.length > 0) {\n      return res[0]\n    }\n    return new RsuvResultBoolPknz(true)\n  }\n}\n","/**\n * -- success - TRUE означает успешный результат\n * -- codeNum - любое положительное число означает ошибку, -1 означает неопределённый результат, значение\n * меньшее -1 означает код успешного результата\n */\nexport class RsuvResultAsau11 {\n  success: boolean = false\n  codeNum: number = 0\n\n  constructor(codeNum = -1, success: boolean = false) {\n    this.success = success\n    this.codeNum = codeNum\n  }\n}\n","import _ from 'lodash';\nimport { RsuvResultAsau11 } from './RsuvResultAsau11';\nimport { RsuvResultTibo } from './RsuvResultTibo';\n\n/**\n * Утилитные статические методы для работы с массивами\n */\nexport class RsuvTuArray {\n\n  /**\n   * Извлекает из массива (1) элементы с индекса (2) по индекс (3) (включая эти индексы), и возвращает их в виде нового\n   * массива.\n   * В случае проблем возвращает тип {@link RsuvResultAsau11}\n   * @param arr (1) -- например ['aa', 'ab', 'ac', 'ad']\n   * @param indexStart (2) -- например 1\n   * @param indexEnd (3) -- например 2\n   * @return например ['ab', 'ac']\n   */\n  static elemsDiap(arr: Array<any>, indexStart: number, indexEnd: number): RsuvResultTibo<any> {\n    if (!RsuvTuArray.fnArrValidIs(arr)) return new RsuvResultTibo<any>({success: false, errCode: '1'})\n    if (!RsuvTuArray.fnIndexValidIs(arr, indexStart)) return new RsuvResultTibo<any>({success: false, errCode: '2'})\n    if (!RsuvTuArray.fnIndexValidIs(arr, indexEnd)) return new RsuvResultTibo<any>({success: false, errCode: '3'})\n    if (indexEnd < indexStart) {\n      return new RsuvResultTibo<any>({success: false, errCode: '4'})\n    }\n    if (indexEnd === indexStart) {\n      return new RsuvResultTibo<any>({success: true, value: [arr[indexStart]], successCode: '100'})\n    }\n    return new RsuvResultTibo<any>({success: true, value: arr.slice(indexStart, indexEnd + 1), successCode: '101'})\n  }\n\n  /**\n   * Удаляет элемент по индексу (2)\n   * @param arrBack\n   * @param index\n   * @return RsuvResultAsau11\n   */\n  static elemDelete(arrBack: Array<any>, index: number): RsuvResultAsau11 {\n    if (!RsuvTuArray.fnArrValidIs(arrBack)) return new RsuvResultAsau11(1)\n    if (!RsuvTuArray.fnIndexValidIs(arrBack, index)) return new RsuvResultAsau11(2)\n    arrBack.splice(index, 1)\n    return new RsuvResultAsau11(0, true)\n  }\n\n  /**\n   * Добавляет элемент (3) по индексу (2), существующие элементы сдвигаются. Если нужно добавить в самый конец,\n   * указать индекс (2) равный длине массива (1)\n   * @param arrBack (1) -- массив, мутируется, например [1, 2, 3]\n   * @param index (2) -- например 1\n   * @param elem (3) -- например 's'\n   * @return RsuvResultAsau11 ..., (1) например [1, 's',  2, 3]\n   */\n  static elemAdd(arrBack: Array<any>, index: number, elem: any): RsuvResultAsau11 {\n    if (!RsuvTuArray.fnArrValidIs(arrBack)) return new RsuvResultAsau11(1)\n    if (!RsuvTuArray.fnIndexValidIsB(arrBack, index)) return new RsuvResultAsau11(2)\n    arrBack.splice(index, 0, elem)\n    return new RsuvResultAsau11(0, true)\n  }\n\n  /**\n   * В массиве (1) перемещает элемент с индекса (2) на индекс (3)\n   * @param arrBack {any[]} (1) -- массив, мутируется\n   * @param indexFrom {number} (2) --\n   * @param indexTo {number} (3) --\n   * @return RsuvResultAsau11\n   */\n  static elemMove(arrBack: Array<any>, indexFrom: number, indexTo: number): RsuvResultAsau11 {\n    if (!RsuvTuArray.fnArrValidIs(arrBack)) return new RsuvResultAsau11(1)\n    if (!RsuvTuArray.fnIndexValidIs(arrBack, indexFrom)) return new RsuvResultAsau11(2)\n    if (!RsuvTuArray.fnIndexValidIs(arrBack, indexTo)) return new RsuvResultAsau11(3)\n    if (indexFrom === indexTo) {\n      return new RsuvResultAsau11(0, true)\n    }\n    // ---\n    const el = arrBack.splice(indexFrom, 1)\n    arrBack.splice(indexTo, 0, el[0])\n    return new RsuvResultAsau11(0, true)\n  }\n\n  /**\n   * Меняет местами элементы (2) и (3)\n   * @param arrBack (1) -- массив, мутируется\n   * @param index1 (2) --\n   * @param index2 (3) --\n   * @return RsuvResultAsau11\n   */\n  static elemsSwap(arrBack: Array<any>, index1: number, index2: number): RsuvResultAsau11 {\n    if (!RsuvTuArray.fnArrValidIs(arrBack)) return new RsuvResultAsau11(1)\n    if (!RsuvTuArray.fnIndexValidIs(arrBack, index1)) return new RsuvResultAsau11(2)\n    if (!RsuvTuArray.fnIndexValidIs(arrBack, index2)) return new RsuvResultAsau11(3)\n    if (index1 === index2) {\n      return new RsuvResultAsau11(0, true)\n    }\n    // ---\n    const a = arrBack[index1]\n    arrBack[index1] = arrBack[index2]\n    arrBack[index2] = a\n    return new RsuvResultAsau11(0, true)\n  }\n\n  /**\n   * Заменяет значением (2), первый элемент (1) удовлетворяющий предикату (3).\n   * Неудачей считаются (среди прочего): пустой массив (1), если предикат (3) не функция\n   * @param arrBack (1) -- массив, мутируется\n   * @param value (2) -- новое значение\n   * @param predicate (3) -- вызывается для каждого элемента (1); аргументы - первый это сам элемент, второй это\n   * индекс этого элемента\n   */\n  static elemUpdate(arrBack: Array<any>, value: any, predicate: (elem: any, index: number) => boolean) {\n    if (!RsuvTuArray.fnArrValidIs(arrBack)) return new RsuvResultAsau11(1)\n    if (!_.isFunction(predicate)) {\n      return new RsuvResultAsau11(2)\n    }\n    if (arrBack.length < 1) {\n      return new RsuvResultAsau11(3)\n    }\n    const ix = arrBack.findIndex((el, index) => predicate(el, index))\n    if (ix === -1) {\n      return new RsuvResultAsau11(4)\n    }\n    arrBack[ix] = value;\n    return new RsuvResultAsau11(0, true)\n  }\n\n  static fnIndexValidIs(arr: Array<any>, index: number) {\n    if (index < 0) {\n      return false\n    }\n    return index <= (arr.length - 1);\n  }\n\n  static fnIndexValidIsB(arr: Array<any>, index: number) {\n    if (index < 0) {\n      return false\n    }\n    return index <= (arr.length);\n  }\n\n  static fnArrValidIs(arr: Array<any>) {\n    return !!_.isArray(arr);\n  }\n}\n","/**\n работа с \"деревом\" которое образуют поля объектов\n */\nexport class RsuvTuTree {\n  /**\n   * Рекурсивно проходит по всем собственным полям (2) объекта (1) и возвращает их значения в виде массива.\n   * Детей ищет в собственном поле (3) объектов дерева\n   * @param obj (1) -- например [{id: 1, childs: [{id: 3}]}, {id: 2}]\n   * @param fieldValueName (2) -- например 'id'\n   * @param fieldChildsName (3) -- например 'childs'\n   * @return например [1, 3, 2]\n   */\n  static values(obj: any, fieldValueName: string, fieldChildsName: string) {\n\n    function recurs(arrBack: Array<any>, elems: Array<any>) {\n      elems.forEach(obj => {\n        if (obj.hasOwnProperty(fieldValueName)) {\n          arrBack.push(obj[fieldValueName])\n        }\n        const childs = obj[fieldChildsName]\n        if (childs && Array.isArray(childs) && childs.length > 0) {\n          recurs(arrBack, childs)\n        }\n      })\n    }\n\n    const result: Array<any> = []\n    if (Array.isArray(obj)) {\n      recurs(result, obj)\n    } else {\n      if (obj.hasOwnProperty(fieldValueName)) {\n        result.push(obj[fieldValueName])\n      }\n      const childs = obj[fieldChildsName]\n      if (childs && Array.isArray(childs) && childs.length > 0) {\n        recurs(result, childs)\n      }\n    }\n    return result;\n  }\n}\n","/*\nПОНЯТИЯ:\n-- [[asau55]], pResults - массив представляющий результат работы Promise.allSettled()\n-- [[asau66]], pElem - отдельный элемент массива pResults\n */\n\n/**\n * [[asau56]]\n * Статусы Promise.allSettled()\n */\nexport enum EnStatusAsau56 {\n  REJECTED = 'rejected',\n  FULFILLED = 'fulfilled'\n}\n\nexport class Asau57 {\n  ix: number = -1\n  reason: any\n}\nexport class RsuvAsau67 {\n  ix: number = -1\n  value: any\n}\n\nexport class PElemAsau66 {\n  status: EnStatusAsau56 = EnStatusAsau56.REJECTED\n  reason?: string\n  value?: any\n}\n\n/**\n * Утилиты для работы с Promise.allSettled()\n */\nexport class RsuvTuPromiseAllSettled {\n\n  /**\n   * Извлекает reason-ы \"реджектнутых\" промисов\n   * @param pResults\n   */\n  static rejected(pResults: Array<PElemAsau66>): Array<Asau57> {\n    const ret: Asau57[] = []\n    pResults.forEach((el, ix) => {\n      if (el.status === EnStatusAsau56.REJECTED) {\n        ret.push({ix, reason: el.reason})\n      }\n    })\n    return ret;\n  }\n\n  /**\n   * Извлекает value-ы успешных промисов\n   * @param pResults\n   */\n  static fulfilled(pResults: Array<PElemAsau66>): Array<RsuvAsau67> {\n    const ret: RsuvAsau67[] = []\n    pResults.forEach((el, ix) => {\n      if (el.status === EnStatusAsau56.FULFILLED) {\n        ret.push({ix, value: el.value})\n      }\n    })\n    return ret;\n  }\n\n  /**\n   * Возвращает TRUE если все результаты в (1) являются успешными\n   * @param pResults\n   */\n  static isAllSuccess(pResults: Array<PElemAsau66>): boolean {\n    return pResults.every(el => el.status === EnStatusAsau56.FULFILLED)\n  }\n\n  /**\n   * Возвращает TRUE если *pElem (1) обладает статусом (2)\n   * @param pElem\n   * @param status\n   */\n  static pElemIs(pElem: PElemAsau66, status: EnStatusAsau56): boolean {\n    return pElem.status === status\n  }\n\n  /**\n   * Для каждого *pElem из (1) вызвает (2) если *pElem is fulfilled или (3) если *pElem is rejected, и результат (2)(3)\n   * добавляет в итоговый массив\n   * @param pResults (1) --\n   * @param cbFulfilled (2) --\n   * @param cbRejected (3) --\n   */\n  static handle<T, S>(\n    pResults: Array<PElemAsau66>, cbFulfilled: (value: any) => T, cbRejected: (reason?: string) => S\n  ): Array<T | S> {\n    return pResults.map(elPElem => {\n      if (this.pElemIs(elPElem, EnStatusAsau56.FULFILLED)) {\n        return cbFulfilled(elPElem.value)\n      } else {\n        return cbRejected(elPElem.reason)\n      }\n    })\n  }\n\n}\n","import toInteger from 'lodash/toInteger';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { substrCountB } from './RsuvTuString';\nimport { RsuvResultCountAndData } from './RsuvResultCountAndData';\nimport { RsuvResultTibo } from './RsuvResultTibo';\n\n/*\n-- [[ntxe]] - фильтр, например 'id=1&id=2' или 'json-server&author=typicode'.\n          Тут & работает как ИЛИ, т.е. для 'id=1&id=2' вернутся две записи (если они существуют с такими id)\n\n */\n\n/**\n * [[ktvg]]\n *\n * Утилита для запросав к json-server (https://github.com/typicode/json-server)\n */\nexport class RsuvTxJsonServer {\n\n  private readonly path: string;\n\n  /**\n   *\n   * @param basePath (1) -- expample 'http://localhost:21884/'\n   * @param collectionName (2) -- example 'products'\n   */\n  constructor(readonly basePath: string, readonly collectionName: string) {\n    this.path = `${this.basePath}${this.collectionName}`;\n  }\n\n  async elemsCountGetAll(): Promise<number> {\n    const resp = await fetch(`${this.path}?_limit=1`);\n    const countSt = resp.headers.get('x-total-count');\n    return toInteger(countSt);\n  }\n\n  async elemsGetAll() {\n    const resp = await fetch(this.path);\n    return resp.json();\n  }\n\n  /**\n   * см. также функцию elemsGetPage()\n   * @param offset (1) -- сколько элементов пропустить, с начала\n   * @param limit (2) -- сколько элементов взять после пропуска\n   */\n  async elemsGet(offset: number, limit: number) {\n    const resp = await fetch(`${this.path}?_start=${offset}&_limit=${limit}`);\n    return resp.json();\n  }\n\n  /**\n   * Другой вариант функции elemsGet()\n   * @param pageNum (1) -- номер страницы, 1+\n   * @param limit (2) -- количество элементов на странице\n   */\n  async elemsGetPage(pageNum: number, limit: number) {\n    const resp = await fetch(`${this.path}?_page=${pageNum}&_limit=${limit}`);\n    return resp.json();\n  }\n\n  /**\n   * Возвращает все записи удовлетворяющие [ntxe]-фильтру (1)\n   * @param filter (1) -- см. [ntxe]\n   */\n  async elemsGetByFilter(filter: string) {\n    const resp = await fetch(`${this.path}?${filter}`);\n    return resp.json();\n  }\n\n  /**\n   * Отбор записей у которых в поле (1) значение содержит подстроку (2) (без учета регистра символов).\n   * Из всех возможных результатов, отбрасываются первые (3) и из оставшихся берутся первые (4)\n   *\n   * @param fieldName (1) --\n   * @param substring (2) --\n   * @param offset (3) --\n   * @param limit (4) --\n   */\n  async elemsGetByFilterB(fieldName: string, substring: string, offset: number, limit: number) {\n    const elems = await this.elemsGetAll()\n    const elemsFiltered = elems.filter((elem: any) => {\n      return substrCountB(elem[fieldName], substring) > 0\n    })\n    return elemsFiltered.slice(offset, offset + limit)\n  }\n\n  /**\n   * Отличается от BA только тем что (3) это не offset а pageNumber\n   *\n   * Отбор записей у которых в поле (1) значение содержит подстроку (2) (без учета регистра символов).\n   * Из всех возможных результатов, берётся страница (3), (4) определяет число элементов на странице\n   *\n   * @param fieldName (1) --\n   * @param substring (2) --\n   * @param pageNumber (3) -- 1+\n   * @param limit (4) --\n   */\n  async elemsGetByFilterBB(fieldName: string, substring: string, pageNumber: number, limit: number) {\n    this.elemsGetByFilterB(fieldName, substring, (pageNumber - 1) * limit, limit)\n  }\n\n  /**\n   * Отличается от B тем что возвращает более развёрнутый ответ\n   *\n   * @param fieldName (1) --\n   * @param substring (2) --\n   * @param offset (3) --\n   * @param limit (4) --\n   * @return RsuvResultCountAndData где\n   * countAll - количество элементов удовлетворяющих фильтру (1)(2) без учета (3)(4),\n   * data - сами элементы удовлетворяющие (1)-(4),\n   * hasNext - TRUE если возвращены НЕ все данные удовлетворяющие фильтру (1)(2)\n   */\n  async elemsGetByFilterC<T>(fieldName: string, substring: string, offset: number, limit: number): Promise<RsuvResultCountAndData<T>> {\n    const elems = await this.elemsGetAll();\n    const elemsFiltered = elems.filter((elem: any) => {\n      return substrCountB(elem[fieldName], substring) > 0;\n    })\n    const elemsFilteredSliced = elemsFiltered.slice(offset, offset + limit);\n    return {\n      countAll: elemsFiltered.length,\n      data: elemsFilteredSliced,\n      hasNext: offset + limit < elemsFiltered.length\n    } as RsuvResultCountAndData<T>\n  }\n\n  /**\n   * Отличается от CA только параметром (3)\n   *\n   * @param fieldName (1) --\n   * @param substring (2) --\n   * @param pageNumber (3) -- 1+\n   * @param limit (4) --\n   */\n  async elemsGetByFilterCB<T>(fieldName: string, substring: string, pageNumber: number, limit: number): Promise<RsuvResultCountAndData<T>> {\n    return this.elemsGetByFilterC(fieldName, substring, (pageNumber - 1) * limit, limit);\n  }\n\n  async elemDelete(id: string | number): Promise<RsuvResultBoolPknz> {\n    const ret = await fetch(`${this.path}/${id}`, {\n      method: 'DELETE'\n    })\n    if (ret.status !== 200) {\n      return new RsuvResultBoolPknz(false, '210315153800', `err*: id not found; id [${id}]; ret.status [${ret.status}]`)\n    }\n    return new RsuvResultBoolPknz();\n  }\n\n  async elemsDelete(ids: string[] | number []): Promise<RsuvResultBoolPknz[]> {\n    const ret = [];\n    for (const id of ids) {\n      const res = await this.elemDelete(id);\n      ret.push(res);\n    }\n    return ret;\n  }\n\n  /**\n   *\n   * @param filter (1) -- см. [ntxe]\n   */\n  async elemsDeleteByFilter(filter: string): Promise<RsuvResultBoolPknz[]> {\n    const elems = await this.elemsGetByFilter(filter)\n    return await this.elemsDelete(elems.map((el: any) => el.id))\n  }\n\n  async elemCreate(data: object): Promise<RsuvResultBoolPknz> {\n    const res = await fetch(`${this.path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n    // ---\n    if (res.status === 201) {\n      return new RsuvResultBoolPknz()\n    }\n    return new RsuvResultBoolPknz(false, '210316120200', `err*: not created; status [${res.status}] url [${res.url}]`)\n  }\n\n  /**\n   * Отличается от А тем что возвращает также информацию об ID созданного элемента (в поле 'value' в виде строки)\n   * @param data (1) -- объект без поля 'id'\n   * @return\n   */\n  async elemCreateB(data: object): Promise<RsuvResultTibo<string>> {\n    const res = await fetch(`${this.path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n    // ---\n    if (res.status === 201) {\n      const createdElem = await res.json()\n      return new RsuvResultTibo({success: true, value: createdElem.id + ''})\n    }\n    return new RsuvResultTibo({success: false, errCode: res.status + '', errMessage: res.url})\n  }\n\n  async elemUpdate(data: any): Promise<RsuvResultBoolPknz> {\n    const res = await fetch(`${this.path}/${data.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n    if (res.status === 200) {\n      return new RsuvResultBoolPknz()\n    }\n    return new RsuvResultBoolPknz(false, '210318111500', `err*: not updated; status [${res.status}] url [${res.url}]`)\n  }\n}\n","import _ from 'lodash';\nimport { RsuvBnuwNT } from '.';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { bnuwUtilsThrowIf } from './RsuvBnuwUtils';\n\n/**\n * Представляет целое число, положительное, отрицательное, ноль, но не дробное, NaN, Infinity и т.п.\n */\nexport class RsuvTxNumInt implements RsuvBnuwNT {\n  constructor(public val: number) {\n    bnuwUtilsThrowIf(this)\n  }\n\n  bnuwIsValid(): RsuvResultBoolPknz {\n    try {\n      if (!this.val && this.val !== 0) {\n        return new RsuvResultBoolPknz(false, '[[1636272243]]', 'is falsy');\n      }\n      if (!_.isFinite(this.val)) {\n        return new RsuvResultBoolPknz(false, '[[1636272327]]', 'is not number');\n      }\n      if (!_.isSafeInteger(this.val)) {\n        return new RsuvResultBoolPknz(\n          false,\n          '[[1636272328]]',\n          'is not integer'\n        );\n      }\n    } catch (error) {\n      return new RsuvResultBoolPknz(\n        false,\n        '[[1636279573]]',\n        (error as Error).message\n      );\n    }\n    return new RsuvResultBoolPknz(true);\n  }\n}\n","import _ from 'lodash';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { RsuvTxNumInt } from './RsuvTxNumInt';\n\n/**\n * Представляет целое число большее нуля или равное нулю\n */\nexport class RsuvTxNumIntAB extends RsuvTxNumInt {\n  bnuwIsValid(): RsuvResultBoolPknz {\n    try {\n      const res = super.bnuwIsValid();\n      if (!res.success) {\n        return res;\n      }\n      // ---\n      if (this.val < 0) {\n        return new RsuvResultBoolPknz(false, '[[1636279844]]', 'number is < 0');\n      }\n    } catch (err) {\n      return new RsuvResultBoolPknz(\n        false,\n        '[[1636279706]]',\n        (err as Error).message\n      );\n    }\n    return new RsuvResultBoolPknz(true);\n  }\n}\n","import _ from 'lodash';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { RsuvTxNumIntAB } from './RsuvTxNumIntAB';\n\n/**\n * Представляет целое число большее нуля\n */\nexport class RsuvTxNumIntABB extends RsuvTxNumIntAB {\n  bnuwIsValid(): RsuvResultBoolPknz {\n    try {\n      const res = super.bnuwIsValid();\n      if (!res.success) {\n        return res;\n      }\n      // ---\n      if (this.val === 0) {\n        return new RsuvResultBoolPknz(\n          false,\n          '[[1636280020]]',\n          'number is === 0'\n        );\n      }\n    } catch (err) {\n      return new RsuvResultBoolPknz(\n        false,\n        '[[1636280025]]',\n        (err as Error).message\n      );\n    }\n    return new RsuvResultBoolPknz(true);\n  }\n}\n","import _ from 'lodash';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { RsuvTxNumInt } from './RsuvTxNumInt';\n\n/**\n * Представляет целое число большее нуля, или равное нулю или равное -1\n */\nexport class RsuvTxNumIntAC extends RsuvTxNumInt {\n  bnuwIsValid(): RsuvResultBoolPknz {\n    try {\n      const res = super.bnuwIsValid();\n      if (!res.success) {\n        return res;\n      }\n      // ---\n      if (this.val < -1) {\n        return new RsuvResultBoolPknz(\n          false,\n          '[[1636280874]]',\n          'number is < -1'\n        );\n      }\n    } catch (err) {\n      return new RsuvResultBoolPknz(\n        false,\n        '[[1636280879]]',\n        (err as Error).message\n      );\n    }\n    return new RsuvResultBoolPknz(true);\n  }\n}\n","import { RsuvBnuwNT } from './RsuvBnuwNT';\nimport { RsuvTxNumIntAB } from './RsuvTxNumIntAB';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { bnuwUtilsThrowIf } from './RsuvBnuwUtils';\n\n/**\n Представление диапазона целых положительных чисел (>= 0), второе число >= первого\n */\nexport class RsuvTxNumIntDiap implements RsuvBnuwNT {\n  constructor(public indexStart: RsuvTxNumIntAB, public indexEnd: RsuvTxNumIntAB) {\n    bnuwUtilsThrowIf(this)\n  }\n\n  bnuwIsValid(): RsuvResultBoolPknz {\n    const ixStart = this.indexStart.val\n    const ixEnd = this.indexEnd.val\n    // ---\n    if (ixStart <= ixEnd) {\n      return new RsuvResultBoolPknz()\n    }\n    return new RsuvResultBoolPknz(false, '[[220107123149]]', `end index must be greater than start index; ixStart ${ixStart}, ixEnd ${ixEnd}`)\n  }\n}\n","import { RsuvTxStringACB } from \"./RsuvTxStringACB\";\n\n/**\n * Представляет типовой \"ключ\", \"имя поля\", \"имя столбца таблицы БД\" и т.п.,\n * т.е. это строка состоящая только из символов [a-zA-Z0-9_] и начинающаяся\n * не с цифры\n *\n * ID [[1636807194]]\n *\n * @implements RsuvBnuwNT\n * @extends RsuvTxStringACB\n * @extends RsuvTxStringAB\n * @extends RsuvTxString\n */\nexport class RsuvTxFieldName extends RsuvTxStringACB {\n}\n","import { RsuvTxStringAC } from './RsuvTxStringAC';\nimport { RsuvEnSort } from './RsuvEnSort';\n\n\n/**\n * Представление сортировки чего-либо абстрактного, обозначенного идентификатором\n */\nexport class RsuvTxSort {\n\n  /**\n   *\n   * @param id (1) -- условный идентификатор\n   * @param sortDirect (2) -- направление сортировки\n   * @throws Error если идентификатор (1) невалиден\n   */\n  constructor(public id: RsuvTxStringAC, public sortDirect: RsuvEnSort) {\n    // --- id verify\n    const validRes = id.bnuwIsValid();\n    if (!validRes.success) {\n      throw new Error(validRes.errCode + ' : ' + validRes.errMessage)\n    }\n    // ---\n  }\n\n}\n","/**\n * Представляет элемент который может быть чекнут (например элемент выпадающего списка)\n */\nexport class RsuvTxChecked {\n  constructor(\n    public id: string,\n    public visibleText: string,\n    public checked: boolean = false,\n    public disabled: boolean = false,\n    public payload?: any\n  ) {\n\n  }\n}\n","import { RsuvBnuwNT } from './RsuvBnuwNT';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { bnuwUtilsThrowIf } from './RsuvBnuwUtils';\n\n/**\n * Представление для имени поля объекта, как единичного, так и составного через точку '.' (в lodash стиле).\n * Примеры: 'name', 'user.profile', 'users.0.name'\n */\nexport class RsuvTxFieldNameLodash implements RsuvBnuwNT {\n  constructor(public val: string) {\n    bnuwUtilsThrowIf(this)\n  }\n\n  bnuwIsValid(): RsuvResultBoolPknz {\n    if (this.val) {\n      return new RsuvResultBoolPknz()\n    }\n    return new RsuvResultBoolPknz(false, '[[220509121136]]')\n  }\n\n}\n","/**\n * [[asau22]]\n * КЛЮЧЕВЫЕ СЛОВА: поиск, строка\n * СМ ТАКЖЕ: [asau24]\n */\nexport enum RsuvSearchMode {\n  /** строгое равенство */\n  EQUAL_STRICT = 'equal_strict_asau22',\n  /**содержит */\n  CONTAINS = 'contains_asau22',\n  /** начинается с */\n  START_WITH = 'start_with_asau22',\n  /** заканчивается на */\n  END_WITH = 'end_with_asau22',\n}\n","import { RsuvBnuwNT } from '.';\nimport { RsuvEnCaseSensitive } from './RsuvEnCaseSensitive';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\nimport { RsuvSearchMode } from './RsuvSearchMode';\n\n/**\n * ID: [[asau23]]\n * Сущность для указания как искать.\n * КЛЮЧЕВЫЕ СЛОВА: поиск\n */\nexport class RsuvSearchHow implements RsuvBnuwNT {\n  constructor(\n    public searchMode: RsuvSearchMode = RsuvSearchMode.CONTAINS,\n    /** учитывать ли регистр символов при поиске */\n    public isCaseSensitive: RsuvEnCaseSensitive\n  ) {}\n\n  bnuwIsValid(): RsuvResultBoolPknz {\n    return new RsuvResultBoolPknz(true);\n  }\n}\n","/**\n* ID [[asau26]]\n*/\nexport enum RsuvEnCaseSensitive {\n  CASE_SENSITIVE_TRUE = 'case_sensitive_true_asau26',\n  CASE_SENSITIVE_FALSE = 'case_sensitive_false_asau26',\n}","/**\n * ID [[asau27]]\n * Обозначения основных типов данных, например использующихся в базах данных\n */\nexport enum RsuvEnDataTypes {\n  /**\n   * строка\n   */\n  TEXT = 'text_asau27',\n  /**\n   * целое число, положительное или отрицательное, в том числе ноль\n   */\n  INT = 'int_asau27',\n  /**\n   * число дробное, с плавающей запятой\n   */\n  FLOAT = 'real_asau27'\n}\n","/**\n * Представление направления сортировки\n */\nexport enum RsuvEnSort {\n  /** по возрастанию */\n  ASC = 'asc',\n  /** по убыванию */\n  DESC = 'desc',\n  /** не определено */\n  UNDEF = 'undef'\n}\n","/**\n * Представление результата set operation ([asau45]) или upsert opertaion ([asau46])\n *\n * ID [[220108131133]] rev 1 1.0.0 2022-01-08\n */\nexport enum RsuvEnResultCrudSet {\n  /**\n   * Была создана новая запись\n   */\n  CREATED = 'created',\n  /**\n   * Была обновлена существующая запись\n   */\n  UPDATED = 'updated',\n  /**\n   * Возникли проблемы. Новая запись создана не была, текущая обновлена не была\n   */\n  ERROR = 'error'\n}\n","import {\n  RsuvBnuwNT,\n  RsuvEnDataTypes,\n  RsuvSearchHow,\n  RsuvTxFieldName,\n  RsuvTxString,\n} from '.';\nimport { RsuvResultBoolPknz } from './RsuvResultBoolPknz';\n\n/**\n * ID [[1636803407]]\n *\n * Представление единичного элемента поиска \"ключ/значение\"\n *\n * @param fieldName (1) -- имя поля (ключ) в котором нужно искать значение (3)\n * @param searchHow (2) -- указания как искать совпадение\n * @param value: (3) -- значение. Вне зависимости какой это тип значения (4), тут должна быть строка\n * @param valueType (4) -- тип значения (3)\n */\nexport class RsuvSearchElem implements RsuvBnuwNT {\n  constructor(\n    public fieldName: RsuvTxFieldName,\n    public searchHow: RsuvSearchHow,\n    public value: RsuvTxString,\n    public valueType: RsuvEnDataTypes = RsuvEnDataTypes.TEXT\n  ) {}\n\n  bnuwIsValid(): RsuvResultBoolPknz {\n    // TODO\n    return new RsuvResultBoolPknz()\n  }\n}\n","import { RsuvSearchElem } from \"./RsuvSearchElem\";\n\n/**\n * Представление нескольких RsuvSearchElem-ID[1636803407] (пар ключ/значение).\n * \n * Значения интерпретируются по правилу \"И\". Например, если элемента два, то поиск считается\n * успешным если успешен поиск [(для элемента 1) \"И\" (для элемента 2)]\n * \n * ID [[1636805160]]\n */\nexport class RsuvSearchElems {\n\n  /**\n   * @param elems (1) --элементы\n   */\n  constructor(public elems: RsuvSearchElem[]) {}\n}\n","/*\nУтилиты для получения информации об объектах.\n\nСтатус: в разработке\n */\n\n\nexport enum TypeAsau42 {\n  KFRX = 'kfrx'\n}\n\nexport function info(entry: any) {\n  const is = []\n  if (entry) {\n    const con = entry.constructor\n    if (con) {\n      if (con.name === 'Function') {\n        is.push(TypeAsau42.KFRX)\n      }\n    }\n  }\n}\n","export const testData = [\n  {id: 1, val: '', desc: 'пустая строка', res: true},\n  {\n    id: 2, val: ' ',\n    desc: 'строка только из пробелов',\n    res: true\n  },\n  {id: 3, val: 'text', desc: 'строка без пробелов', res: true},\n  {id: 4, val: 'text text', desc: 'строка с пробелами только внутри', res: true},\n  {id: 5, val: ' text', desc: 'строка с пробелом в начале', res: true},\n  {id: 6, val: 'text ', desc: 'строка с пробелом в конце', res: true},\n  {id: 7, val: ' text ', desc: 'строка с пробелом в начале и конце', res: true},\n  {\n    id: 8, val: `text1\n  text2`, desc: 'строка переносом внутри', res: true\n  },\n  {id: 9, val: '100', desc: 'строка целое число', res: true},\n  {id: 10, val: null, desc: 'null', res: true},\n  {id: 11, val: undefined, desc: 'undefined', res: true},\n  {id: 12, val: NaN, desc: 'NaN', res: true},\n  {id: 13, val: Infinity, desc: 'Infinity', res: true},\n  {id: 14, val: 0, desc: 'ноль', res: true},\n  {id: 15, val: +0, desc: '+0', res: true},\n  {id: 16, val: -0, desc: '-0', res: true},\n  {id: 17, val: 100, desc: 'число 100', res: true},\n  {id: 18, val: 100.06, desc: 'число 100.06', res: true},\n  {id: 19, val: [], desc: 'пустой массив', res: true},\n  {id: 20, val: [{a: 1}], desc: 'непустой массив', res: true},\n  {id: 21, val: {}, desc: 'пустой объект', res: true},\n  {id: 22, val: {a: 1}, desc: 'непустой объект', res: true},\n  {\n    id: 23, val: () => {\n    }, desc: 'стрелочная функция', res: true\n  },\n  {\n    id: 24, val: `\n  text`, desc: 'строка с переносом в начале', res: true\n  },\n  {\n    id: 25, val: `text\n  `, desc: 'строка с переносом в конце', res: true\n  },\n  {\n    id: 26, val: `\n    text\n  `, desc: 'строка с переносом в начале, середине и конце', res: true\n  },\n  {\n    id: 27, val: `\n    `, desc: 'строка из одних переносов', res: true\n  },\n]\n\nexport const RSUV_NO_TAGS_SPC_VALUE = '<no tags>'\n"],"names":["RsuvValueAnd","value","isValueExist","RsuvErr","code","message","asString","asStringB","oj","RsuvPaginationGyth","elemsCount","elemsPerPageCount","pagesFloat","pages","Math","trunc","dev","pageCount","indexesByPageNum","pageNum","pageNum0","indexLast","indexStart","elemsByPageNum","elems","slice","RsuvResultBoolPknz","success","errCode","errMessage","infoMulti","ret","notSuccess","forEach","el","push","successAllIsSugar","info","b1","length","RsuvResultTibo","tibo","successCode","fromPknz","pknz","RSUV_AL_ALREADY_EXIST","bnuwUtilsThrowIf","obj","validRes","bnuwIsValid","bnuwUtilsVerify","res","bnuwUtilsVerifyMulti","values","Array","isArray","verif","RsuvTxString","val","_","isString","err","RsuvTxStringAB","test","RsuvTxStringAC","RsuvTxStringACB","RsuvTxStringACC","isEmptyOrWhitespaces","str","substrCount","target","substr","split","substrCountB","toLowerCase","substrIndexes","ignoreCase","substrEscape","escapeRegExp","rg","RegExp","exec","RsuvT7","index","stringsTwoInfoB","strTarget","strSub","strTargetRaw","strSubRaw","t5","RsuvT5","t4NoSens","RsuvT4","rsuvT3","RSUV_T3","COMPLETE_MATCH","STARTED","ENDED","CONTAINS","containsCount","containsIndexes","indexes","substring","t4Sens","indexes2","sensitive","notSensitive","stringsTwoInfo","t4","RSUV_T6_CASE","startIndex","endIndex","RsuvTxStringAD","RsuvTxStringADB","DATETIME","ResultAsau36","rvuoFromYata","yata","yataIs","dayjs","format","yataFromRvuo","rvuo","necz","rvuoIs","toInteger","isFinite","yataFromEavv","eavv","eavvIs","yataIsActual","yataExpire","ex","month","Number","day","hour","minute","toDate","getTime","RsuvTxEmail","resV","EmailValidator","validate","undefined","RsuvZrnxSubData","page","elemsAllCount","elemsOfPage","RsuvAdapterZrnx","perPage","dataSource","make","last","elemsAllCountGet","rmPagination","elemsGet","dataGet","RsuvTxBoolean","isBoolean","RsuvEcxm","find","models","id","model","append","modelsBack","fModel","appendMulti","update","elem","checked","updateMulti","findIndex","elModel","splice","deleteMulti","filter","inverse","selectAll","deselectAll","RsuvCheckModelGnpw","RsuvResultAsau11","codeNum","RsuvTuArray","elemsDiap","arr","indexEnd","fnArrValidIs","fnIndexValidIs","elemDelete","arrBack","elemAdd","fnIndexValidIsB","elemMove","indexFrom","indexTo","elemsSwap","index1","index2","a","elemUpdate","predicate","isFunction","ix","RsuvTuTree","fieldValueName","fieldChildsName","recurs","hasOwnProperty","childs","result","EnStatusAsau56","Asau57","RsuvTuPromiseAllSettled","rejected","pResults","status","REJECTED","reason","fulfilled","FULFILLED","isAllSuccess","every","pElemIs","pElem","handle","cbFulfilled","cbRejected","map","elPElem","RsuvTxJsonServer","basePath","collectionName","path","elemsCountGetAll","fetch","resp","countSt","headers","get","elemsGetAll","json","offset","limit","elemsGetPage","elemsGetByFilter","elemsGetByFilterB","fieldName","elemsFiltered","elemsGetByFilterBB","pageNumber","elemsGetByFilterC","elemsFilteredSliced","countAll","data","hasNext","elemsGetByFilterCB","method","elemsDelete","ids","elemsDeleteByFilter","elemCreate","body","JSON","stringify","url","elemCreateB","createdElem","RsuvTxNumInt","isSafeInteger","error","RsuvTxNumIntAB","RsuvTxNumIntABB","RsuvTxNumIntAC","RsuvTxNumIntDiap","ixStart","ixEnd","RsuvTxFieldName","RsuvTxSort","sortDirect","Error","RsuvTxChecked","visibleText","disabled","payload","RsuvTxFieldNameLodash","RsuvSearchMode","RsuvSearchHow","searchMode","isCaseSensitive","RsuvEnCaseSensitive","RsuvEnDataTypes","RsuvEnSort","RsuvEnResultCrudSet","RsuvSearchElem","searchHow","valueType","TEXT","RsuvSearchElems","TypeAsau42","entry","testData","desc","NaN","Infinity","RSUV_NO_TAGS_SPC_VALUE"],"mappings":"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"}